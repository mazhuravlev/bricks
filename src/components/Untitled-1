 {/* <div className="toolsPanel">
          <div className="panel-grid-size">
            <div>
              шаг сетки
              <button type="button" onClick={() => this.setState({ step: step + 1 })}>+1</button>
              <button type="button" onClick={() => this.setState({ step: step - 1 })}>-1</button>
            </div>
            <div className="control-panel grid-size-options-panel">
              <p>Параметры шаблона:</p>
              <div className="width">
                <p>Ширина:</p>
                <button type="button" onClick={this.handleGridSize({ width: width - 1 })}>-1</button>
                <label htmlFor="grid-width">
                  <input type="number" min="2" className="input-grid-size" name="width" id="grid-width" value={width} onChange={this.handleGridSize()} />
                </label>
                <button type="button" onClick={this.handleGridSize({ width: width + 1 })}>+1</button>
              </div>
              <div className="height">
                <p>Высота:</p>
                <button type="button" onClick={this.handleGridSize({ height: height - 1 })}>-1</button>
                <label htmlFor="grid-height">
                  <input type="number" min="2" className="input-grid-size" name="height" id="grid-height" value={height} onChange={this.handleGridSize()} />
                </label>
                <button type="button" onClick={this.handleGridSize({ height: height + 1 })}>+1</button>
              </div>
            </div>
          </div>
          <div className="control-panel panel-sector-size">
            <div className="grid-sector-options-panel">
              <p>Параметры сектора:</p>
              <label htmlFor="sector-left">
                left:
                <input type="number" min="0" className="input-sector-size" name="left" id="sector-left" value={position.left} onChange={this.handleSectorPosition} />
              </label>
              <label htmlFor="grid-width">
                top:
                <input type="number" min="0" className="input-sector-size" name="top" id="sector-top" value={position.top} onChange={this.handleSectorPosition} />
              </label>
              <label htmlFor="grid-width">
                width:
                <input type="number" min="2" className="input-sector-size" name="width" id="sector-width" value={size.width} onChange={this.handleSectorSize} />
              </label>
              <label htmlFor="grid-height">
                height:
                <input type="number" min="2" className="input-sector-size" name="height" id="sector-height" value={size.height} onChange={this.handleSectorSize} />
              </label>
            </div>
          </div>
          <div className="control-panel color-preset">
            <p>Набор цветов:</p>
            <select onChange={this.changeColorPreset} value={bricksColors.name}>
              {presetsColl.map(c => <option key={c} value={c}>{c}</option>)}
            </select>
            <button onClick={this.addNewColorPreset} type="button">add</button>
          </div>
          <div className="btn-group bricks-horizontal-size">
            <button onClick={this.setBrickOperation(4, 1)} type="button">4x1</button>
            <button onClick={this.setBrickOperation(3, 1)} type="button">3x1</button>
            <button onClick={this.setBrickOperation(2, 1)} type="button">2x1</button>
            <button onClick={this.setBrickOperation(1, 1)} type="button">1x1</button>
          </div>
          <div className="btn-group bricks-vertical-size">
            <button onClick={this.setBrickOperation(1, 4)} type="button">1x4</button>
            <button onClick={this.setBrickOperation(1, 3)} type="button">1x3</button>
            <button onClick={this.setBrickOperation(1, 2)} type="button">1x2</button>
          </div>
          <div>
            <select onChange={this.changeColor}>
              {colors.map(c => <option key={c} value={c}>{c}</option>)}
            </select>
            <button onClick={this.setRemoveBrickOperation} type="button">Delete</button>
          </div>
        </div> */}