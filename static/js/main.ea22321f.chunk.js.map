{"version":3,"sources":["serviceWorker.js","actions/index.js","reducers/colorPalette.js","reducers/index.js","operations.js","helpers/index.js","components/Brick.jsx","components/GridBricks.jsx","containers/GridBricksContainer.js","components/Preview.jsx","components/tools/ColorList/ColorPalette.jsx","components/tools/ColorList/ColorList.jsx","components/NumberInput.jsx","components/HotKeyPanel.jsx","components/tools/PaintingPanel.jsx","containers/NewEditor.jsx","App.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","addBrick","createAction","removeBrick","changeBrickSize","changeBrickColor","changeTemplateSize","setSectorSize","changePresetName","setColor","changeCurrentPreset","historyPush","historySwap","historyRemove","addColorPalette","removeColorPalette","addColorToPalette","removeColorFromPalette","switchPalette","colorPalette","initialState","_handleActions","console","log","handleActions","Object","defineProperty","actions","state","newPalette","name","arguments","length","undefined","id","uuid","colors","makePalette","concat","keys","palettes","objectSpread","currentPalette","action","payload","filter","x","code","bricks","reducers_handleActions","_ref","brick","_ref2","_","omit","brickSize","_ref3","size","width","height","templateSize","_ref4","newSize","sector","_ref5","left","top","bricksColors","_handleActions5","_ref6","_ref6$payload","color","colorPresetName","presetId","brickId","_ref7","_ref7$payload","_ref8","omitBy","_ref9","history","_handleActions6","_ref10","operations","undo","toConsumableArray","redo","_ref11","type","slice","last","_ref12","reducers","_ref13","colorPaletteState","combineReducers","ADD_BRICK","REMOVE_BRICK","CHANGE_COLOR_BRICK","getGridPos","y","step","Math","floor","buildSyleObj","styleObj","reduce","acc","key","generateBricksMatrix","brickMatrix","values","forEach","position","getBrickPosition","cursorPosition","round","makeRgbStyleProp","rgb","getBricksInSector","bricksInSectorMap","bricksInSector","tileBricks","map","createImage","_x","_x2","_createImage","apply","this","_callee","sectorWidth","sectorHeight","img","regenerator_default","a","wrap","_context","prev","next","domtoimage","toPng","document","querySelector","sent","abrupt","stop","isOutside","relPos","some","item","makeBrickColors","bricksPairs","colorMap","totalValue","value","c","colorBrickCount","newColors","n","i","random","Error","getColor","b","isBrickButonActive","operation","w","h","React","memo","style","onClick","button","active","brickWidth","rgbColor","react_default","createElement","className","classnames","backgroundColor","borderWidth","makeCursor","containerStyle","display","gridTemplateColumns","gridTemplateRows","justifyItems","alignItems","gridTemplateAreas","topToolStyle","gridArea","GridBricks","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","_this$props$position","currentCell","setState","keyBoardEvents","event","newBrick","_this$props2","oldColor","push","data","lastAction","currentOperation","resultAction","_this$props3","_this$props4","old","new","handleOperation","e","stopPropagation","_method","_this$props5","lineH1","lineH2","lineV1","lineV2","Brick","_this2","_this$props6","isActive","setBrickOperation","marginRight","buttonActive","setPaintOperation","marginLeft","paddingTop","data-w","data-h","marginBottom","marginTop","setRemoveBrickOperation","onMouseMove","cursor","colorId","renderBrickPreview","renderSector","Component","GridBricksContainer","connect","actionCreators","Preview","tiles","Array","gridSize","fill","join","ColorPalette","_Component","_getPrototypeOf2","_len","args","_key","dropdownOpen","toggle","prevState","setNewColor","removeColor","preventDefault","inherits","createClass","colorList","title","onContextMenu","ColorList","colorCode","changeColor","newColorList","onChange","target","fontSize","margin","ColorList_ColorPalette","currentColor","setColorList","NumberInput","Function","min","handleDec","max","handleInc","HotKeyPanel","handleSector","param","Number","bind","assertThisInitialized","popoverOpen","float","components_NumberInput","v","textAlign","borderRadius","reactstrap_es","placement","isOpen","PaintingPanel","addNewColor","changeColorValue","colorIndex","splice","newColorCode","_this3","colorEntry","Fragment","deleteColor","_this4","userSelect","makeRandomPainting","overflowY","renderColorList","onSave","block","keyList","minHeight","border","gridColumnGap","gridRowGap","placeItems","editorLayout","padding","_NewEditor","undoredo","_operationMapping","operationMapping","lastOperations","isArray","handleKeyDown","keyMapping","alt","shift","ctrl+z","ctrl+y","up","right","down","+","-","isFunction","isDisabledHandleKey","setOperation","handleKeyUp","workareaStep","tileStep","save","setInterval","asyncToGenerator","mark","t0","t1","t2","preview","brickPairs","getBrickPairs","_bricks","toArray","head","tail","_tail$filter","brick1","brick2","conditions1","every","conditions2","isPair","pair","slicedToArray","restBricks","without","flatten","bricksInPairsIds","keyBy","resultColorsList","chunk","src","body","background","fillBackground","vasya","react_keyboard_event_handler_default","handleKeys","isDisabled","handleEventType","onKeyEvent","handleFocusableElements","HotKeyPanel_HotKeyPanel","tools_ColorList_ColorList","ReactCursorPosition","containers_GridBricksContainer","updateBrickSector","addToHistory","tools_PaintingPanel","overflow","backgroundImage","NewEditor","App","store","es","containers_NewEditor","palette","initialPaletteState","_init","paletteData","CefSharp","BindObjectAsync","loadString","JSON","parse","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","saveString","stringify","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea22321f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import _ from 'lodash';\nimport { createAction } from 'redux-actions';\n\nexport const addBrick = createAction('ADD_BRICK');\n\nexport const removeBrick = createAction('REMOVE_BRICK');\n\nexport const changeBrickSize = createAction('CHANGE_BRICK_SIZE');\n\nexport const changeBrickColor = createAction('CHANGE_BRICK_COLOR');\n\nexport const changeTemplateSize = createAction('CHANGE_TEMPLATE_SIZE');\n\nexport const setSectorSize = createAction('SET_SECTOR_SIZE');\n\nexport const changePresetName = createAction('CHANGE_PRESET_NAME');\n\nexport const setColor = createAction('SET_COLOR');\n\nexport const changeCurrentPreset = createAction('CHANGE_CURRENT_PRESET');\n\nexport const historyPush = createAction('HISTORY_PUSH');\nexport const historySwap = createAction('HISTORY_SWAP');\nexport const historyRemove = createAction('HISTORY_REMOVE');\n\nexport const addColorPalette = createAction('ADD_COLOR_PALETTE');\nexport const removeColorPalette = createAction('REMOVE_COLOR_PALETTE');\nexport const addColorToPalette = createAction('ADD_COLOR_TO_PALETTE');\nexport const removeColorFromPalette = createAction('REMOVE_COLOR_TO_PALETTE');\nexport const switchPalette = createAction('SWITCH_PALETTE');\n","import uuid from 'uuid/v4';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nfunction makePalette(name = 'new') {\n  return { id: uuid(), name, colors: [] };\n}\n\nconst colorPalette = (initialState) => {\n  console.log('INIT PALETTE', initialState);\n  return handleActions({\n    [actions.addColorPalette](state) {\n      const newPalette = makePalette(`палитра ${Object.keys(state.palettes).length}`);\n      return {\n        ...state,\n        currentPalette: newPalette.id,\n        palettes: { ...state.palettes, [newPalette.id]: newPalette },\n      };\n    },\n    [actions.switchPalette](state, action) {\n    // TODO: assert\n      return { ...state, currentPalette: action.payload };\n    },\n    [actions.removeColorFromPalette](state, action) {\n      return {\n        ...state,\n        palettes: {\n          ...state.palettes,\n          [state.currentPalette]:\n            {\n              ...state.palettes[state.currentPalette],\n              colors: state.palettes[state.currentPalette].colors.filter(x => x.code !== action.payload),\n            },\n        },\n      };\n    },\n    [actions.addColorToPalette](state, action) {\n      const currentPalette = state.palettes[state.currentPalette];\n      return {\n        ...state,\n        palettes: {\n          ...state.palettes,\n          [state.currentPalette]: {\n            ...currentPalette,\n            colors: currentPalette.colors.concat([action.payload]),\n          },\n        },\n      };\n    },\n  }, initialState);\n};\n\nexport default colorPalette;\n","import { handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport colorPalette from './colorPalette';\n\nconst bricks = handleActions({\n  [actions.addBrick](state, { payload: { brick } }) {\n    return { ...state, [brick.id]: brick };\n  },\n  [actions.removeBrick](state, { payload: { brick } }) {\n    return _.omit(state, brick.id);\n  },\n}, {});\n\nconst initBrickSize = {\n  width: 1,\n  height: 1,\n};\nexport const brickSize = handleActions({\n  [actions.changeBrickSize](state, { payload: { size } }) {\n    return size;\n  },\n}, initBrickSize);\n\nconst initTemplateSize = {\n  width: 10,\n  height: 10,\n};\nconst templateSize = handleActions({\n  [actions.changeTemplateSize](state, { payload: { newSize } }) {\n    return { ...state, ...newSize };\n  },\n}, initTemplateSize);\n\nconst initSectorSize = {\n  left: 3,\n  top: 3,\n  width: 4,\n  height: 4,\n};\nconst sector = handleActions({\n  [actions.setSectorSize](state, { payload }) {\n    return { ...state, ...payload };\n  },\n}, initSectorSize);\n\nconst bricksColors = handleActions({\n  [actions.addBrick](state, { payload: { brick: { id }, color, colorPresetName } }) {\n    const presetId = `${id}-${colorPresetName}`;\n    return { ...state, [presetId]: { colorPresetName, brickId: id, color } };\n  },\n  [actions.changeBrickColor](state, { payload: { brickId, color, colorPresetName } }) {\n    const presetId = `${brickId}-${colorPresetName}`;\n    return { ...state, [presetId]: { colorPresetName, brickId, color } };\n  },\n  [actions.removeBrick](state, { payload: { brick } }) {\n    return _.omitBy(state, ({ brickId }) => brickId === brick.id);\n  },\n  [actions.changePresetName](state) {\n    // const defaultColor = {\n    //   code: 'gray',\n    //   rgb: '214,199,148',\n    // };\n    return state;\n    // return Object.keys(state).reduce((acc, id) => {\n    //   const newId = `${state[id].brickId}-${name}`;\n    //   const newItem = {\n    //     [newId]: {\n    //       ...state[id],\n    //       color: defaultColor,\n    //     },\n    //   };\n    //   return { ...acc, ...newItem };\n    // }, { ...state });\n  },\n}, {});\n\nconst history = handleActions({\n  [actions.historyPush](state, { payload: { operations } }) {\n    const newHistory = [...state.undo, operations];\n    return { undo: newHistory, redo: [] };\n  },\n  [actions.historySwap](state, { payload: { type } }) {\n    const { undo, redo } = state;\n    if (type === 'undo') {\n      return {\n        undo: undo.slice(0, undo.length - 1),\n        redo: [...redo, _.last(undo)],\n      };\n    }\n    return {\n      undo: [...undo, _.last(redo)],\n      redo: redo.slice(0, redo.length - 1),\n    };\n  },\n  [actions.historyRemove]() {\n    return { undo: [], redo: [] };\n  },\n}, { undo: [], redo: [] });\n\nconst colorPresetName = handleActions({\n  [actions.changePresetName](state, { payload: { name } }) {\n    return name;\n  },\n}, '1');\n\n\nexport default ({ colorPaletteState }) => combineReducers({\n  bricks,\n  templateSize,\n  brickSize,\n  sector,\n  bricksColors,\n  history,\n  colorPresetName,\n  colorPalette: colorPalette(colorPaletteState),\n});\n","export const ADD_BRICK = 'ADD_BRICK';\nexport const REMOVE_BRICK = 'REMOVE_BRICK';\nexport const CHANGE_COLOR_BRICK = 'CHANGE_COLOR_BRICK';\nexport const CANCEL_EVENT = 'CANCEL_EVENT';\n","import domtoimage from 'dom-to-image';\nimport { ADD_BRICK } from '../operations';\n\nexport const getGridPos = (x, y, step) => {\n  const left = Math.floor(x / step);\n  const top = Math.floor(y / step);\n  return { left, top };\n};\n\nexport const buildSyleObj = (styleObj, step) => Object.keys(styleObj)\n  .reduce((acc, key) => ({ ...acc, [key]: styleObj[key] * step }), {});\n\nexport const gridSizeValidate = (size, gridSizeLimit) => (\n  (size > 0) && (size <= gridSizeLimit) ? size : gridSizeLimit);\n\nexport function generateBricksMatrix(bricks) {\n  const brickMatrix = {};\n  Object.values(bricks).forEach((brick) => {\n    for (let x = 0; x < brick.size.width; x += 1) {\n      for (let y = 0; y < brick.size.height; y += 1) {\n        brickMatrix[`${x + brick.position.left};${y + brick.position.top}`] = brick;\n      }\n    }\n  });\n  return brickMatrix;\n}\n\nexport function getBrickPosition(cursorPosition, { width, height }) {\n  if (width === 1 && height === 1) return cursorPosition;\n  return width > height\n    ? { top: cursorPosition.top, left: cursorPosition.left - Math.round(width / 2) }\n    : { left: cursorPosition.left, top: cursorPosition.top - Math.round(height / 2) };\n}\n\n\nexport const makeRgbStyleProp = rgb => (rgb ? `rgb(${rgb})` : 'rgb(214,199,148)');\n\nexport function getBricksInSector(bricks, sector) {\n  /* eslint-disable */\n  const brickMatrix = generateBricksMatrix(bricks);\n  const bricksInSectorMap = {};\n  for (let x = 0; x < sector.width; x++) {\n    for (let y = 0; y < sector.height; y++) {\n      const brick = brickMatrix[`${x + sector.left};${y + sector.top}`];\n      if (brick && !bricksInSectorMap[brick.id]) {\n        bricksInSectorMap[brick.id] = brick;\n      }\n    }\n  }\n  const bricksInSector = Object.values(bricksInSectorMap);\n  const tileBricks = Object.values(bricksInSector).map((brick) => {\n    const { position } = brick;\n    const left = position.left - sector.left;\n    const top = position.top - sector.top;\n    return { ...brick, position: { left, top } };\n  });\n  if (bricksInSector.length > 0) {\n    return tileBricks;\n  }\n  return [];\n}\n\nexport async function createImage(sectorWidth, sectorHeight) {\n  const img = await domtoimage.toPng(document.querySelector('.sectorItem'), {\n    width: sectorWidth * 15,\n    height: sectorHeight * 15,\n  });\n  return img;\n}\n\nexport function isOutside (position, size, sector){\n  const relPos = {left: position.left - sector.left, top: position.top - sector.top};\n  const conditions = [\n    relPos.left < 0 || relPos.top < 0,\n    relPos.left + size.width > sector.width,\n    relPos.top + size.height > sector.height,\n  ];\n  return conditions.some(item => item);\n};\n\nexport function  isPair (brick1, brick2)  {\n  const conditions1 = [\n    brick1.size.width === 1,\n    brick1.position.left === brick2.position.left,\n  ].every(item => item);\n  const conditions2 = [\n    brick1.size.height === 1,\n    brick1.position.top === brick2.position.top,\n  ].every(item => item);\n  return conditions1 || conditions2;\n};\n\nexport function  getBrickPairs(bricks) {\n  if (bricks.length < 2) return [];\n  const [head, ...tail] = bricks;\n  const [pair] = tail.filter(brick => isPair(head, brick));\n  if (!pair && tail.length === 0) {\n    return [];\n  }\n  if (!pair && tail.length > 0) {\n    return getBrickPairs(tail);\n  }\n\n  const restBricks = _.without(tail, pair);\n  if (restBricks.length === 0) {\n    return [head, pair];\n  }\n  return _.flatten([[head, pair], ...getBrickPairs(restBricks)]);\n};\n\nexport function  makeBrickColors  (bricksPairs, colorMap)  {\n  const colors = Object.values(colorMap);\n  const totalValue = colors.map(x => x.value).reduce((a, c) => a + c);\n  const colorParts = colors.map(x => x.value / totalValue);\n  const colorBrickCount = colorParts.map(x => Math.round(bricksPairs.length * x));\n  const getColor = () => {\n    let n = 0;\n    while (n < 100) {\n      n += 1;\n      const i = Math.floor(Math.random() * colorBrickCount.length);\n      if(colorBrickCount.reduce((a,c) => a+c) === 0) {\n        return colors[i].color;\n      }\n      if (colorBrickCount[i] > 0) {\n        colorBrickCount[i] -= 1;\n        return colors[i].color;\n      }\n    }\n    throw new Error('coloring iterations exceeded');\n  };\n  const newColors = {};\n  Object.values(bricksPairs).forEach((bricks) => {\n    const color = getColor();\n    bricks.forEach((b) => {\n      newColors[b.id] = color;\n    });\n  });\n  return newColors;\n};\n\nexport function isBrickButonActive(operation, size, w, h) {\n  if(operation.type !== ADD_BRICK) return false;\n  return w === size.width && h === size.height;\n\n}","import React from 'react';\nimport classnames from 'classnames';\nimport { makeRgbStyleProp } from '../helpers';\n\nconst _brick = ({ style, color, onClick, button, active }) => {  //eslint-disable-line\n  const brickWidth = style.width > style.height ? style.height : style.width;\n  const rgbColor = makeRgbStyleProp(color);\n  return (\n    <div\n      onClick={onClick}\n      className={classnames('brick', { button, active })}\n      style={{\n        ...style,\n        backgroundColor: rgbColor,\n        borderWidth: brickWidth * 0.1,\n      }}\n    />\n  );\n};\n\nexport default React.memo(_brick);\n","/* eslint-disable no-plusplus */\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v4';\n\nimport classnames from 'classnames';\nimport Brick from './Brick';\nimport * as operations from '../operations';\nimport {\n  getGridPos, buildSyleObj, generateBricksMatrix, getBrickPosition, isBrickButonActive,\n} from '../helpers';\n\nfunction makeCursor(operation) {\n  switch (operation.type) {\n    case 'CHANGE_COLOR_BRICK':\n      return 'crosshair';\n    case 'REMOVE_BRICK':\n      return 'default';\n    case 'ADD_BRICK':\n      return 'default';\n    default: return 'default';\n  }\n}\n\nconst containerStyle = {\n  display: 'grid',\n  gridTemplateColumns: '26px auto',\n  gridTemplateRows: '26px auto',\n  justifyItems: 'left',\n  alignItems: 'left',\n  gridTemplateAreas: '\"top-tool top-tool\" \"left-tool editor\"',\n};\n\nconst topToolStyle = {\n  gridArea: 'top-tool', display: 'block', width: '100%', height: '100%',\n};\n\nclass GridBricks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cursorPosition: { left: 0, top: 0 },\n    };\n  }\n\n  cursorPosition = () => {\n    const { position: { x, y }, step } = this.props;\n    const currentCell = getGridPos(x - 26, y - 26, step);\n    this.setState({ cursorPosition: currentCell });\n  };\n\n  keyBoardEvents = (event) => {\n    console.log(event.key);\n  }\n\n  addBrick = () => {\n    const newBrick = {\n      id: uuid(),\n      position: getBrickPosition(this.state.cursorPosition, this.props.brickSize),\n      size: this.props.brickSize,\n    };\n    const { bricks, colorPresetName, color } = this.props;\n    const brickMatrix = generateBricksMatrix(bricks);\n    const actions = [];\n    for (let x = 0; x < newBrick.size.width; x++) {\n      for (let y = 0; y < newBrick.size.height; y++) {\n        if (brickMatrix[`${x + newBrick.position.left};${y + newBrick.position.top}`]) {\n          const brick = brickMatrix[`${x + newBrick.position.left};${y + newBrick.position.top}`];\n\n          const oldColor = this.props.bricksColors[`${brick.id}-${colorPresetName}`]\n            ? this.props.bricksColors[`${brick.id}-${colorPresetName}`].color\n            : { rgb: 'rgb(214,199,148)' };\n\n          this.props.removeBrick({ brick });\n          actions.push({\n            type: operations.REMOVE_BRICK,\n            data: { brick, color: oldColor, colorPresetName },\n          });\n        }\n      }\n    }\n    this.props.addBrick({ brick: newBrick, color, colorPresetName });\n\n    const lastAction = ({\n      type: this.props.currentOperation.type,\n      data: { brick: newBrick, color, colorPresetName },\n    });\n    const resultAction = actions.length > 0 ? [...actions, lastAction] : lastAction;\n    this.props.historyPush({ operations: resultAction });\n  }\n\n  removeBrick = (brick) => {\n    const { colorPresetName, color } = this.props;\n    if (brick) {\n      this.props.removeBrick({ brick });\n      const action = {\n        type: this.props.currentOperation.type,\n        data: { brick, color, colorPresetName },\n      };\n      this.props.historyPush({ operations: action });\n    }\n  }\n\n  changeBrickColor = (brick) => {\n    if (brick) {\n      const { color, colorPresetName, bricksColors } = this.props;\n      const oldColor = bricksColors[`${brick.id}-${colorPresetName}`] ? bricksColors[`${brick.id}-${colorPresetName}`].color : undefined;\n\n      this.props.changeBrickColor({ brickId: brick.id, color, colorPresetName });\n      const action = {\n        type: this.props.currentOperation.type,\n        data: {\n          brickId: brick.id,\n          color: { old: oldColor, new: color },\n          colorPresetName,\n        },\n      };\n      this.props.historyPush({ operations: action });\n    }\n  }\n\n  handleOperation = brick => (e) => {\n    e.stopPropagation();\n    const { currentOperation: { type } } = this.props;\n    if (type) {\n      const method = {\n        [operations.ADD_BRICK]: this.addBrick,\n        [operations.REMOVE_BRICK]: this.removeBrick,\n        [operations.CHANGE_COLOR_BRICK]: this.changeBrickColor,\n      };\n      method[type](brick);\n    }\n  }\n\n  renderSector() {\n    const { step, sector } = this.props;\n    const lineThickness = 2;\n    const lineH1 = {\n      left: 0,\n      top: 0,\n      width: sector.width * step,\n      height: lineThickness,\n    };\n    const lineH2 = {\n      left: 0,\n      top: sector.height * step,\n      width: sector.width * step,\n      height: lineThickness,\n    };\n    const lineV1 = {\n      left: 0,\n      top: 0,\n      width: lineThickness,\n      height: sector.height * step,\n    };\n    const lineV2 = {\n      left: sector.width * step,\n      top: 0,\n      width: lineThickness,\n      height: sector.height * step + lineThickness,\n    };\n    return (\n      <div className=\"templateSector\" style={{ ...buildSyleObj(sector, this.props.step), width: 0, height: 0 }}>\n        <div className=\"sectorLine\" style={lineH1} />\n        <div className=\"sectorLine\" style={lineH2} />\n        <div className=\"sectorLine\" style={lineV1} />\n        <div className=\"sectorLine\" style={lineV2} />\n      </div>\n    );\n  }\n\n  renderBrickPreview(cursorPosition) {\n    const position = getBrickPosition(cursorPosition, this.props.brickSize);\n    const style = buildSyleObj({ ...this.props.brickSize, ...position }, this.props.step);\n    return (\n      <Brick\n        style={style}\n        color={this.props.color.rgb}\n      />\n    );\n  }\n\n  render() {\n    const {\n      isActive,\n      currentOperation,\n      step,\n      bricks,\n      bricksColors,\n      colorPresetName,\n    } = this.props;\n\n    const templateSize = { height: 11, width: 11 };\n    return (\n      <div style={containerStyle}>\n        <div style={topToolStyle}>\n          {[1, 2, 3, 4].map(x => (\n            <Brick\n              button\n              active={isBrickButonActive(currentOperation, this.props.brickSize, x, 1)}\n              onClick={this.props.setBrickOperation(x, 1)}\n              key={x}\n              style={{\n                width: x * 20, height: 20, position: 'relative', marginRight: 6,\n              }}\n            />\n          )) }\n          <div\n            className={classnames('tool-button', 'paint-button',\n              { buttonActive: currentOperation.type === operations.CHANGE_COLOR_BRICK })}\n            onClick={this.props.setPaintOperation}\n            style={{\n              backgroundColor: `rgb(${this.props.color.rgb})`,\n              display: 'inline-block',\n              marginLeft: 1,\n              top: -1,\n              position: 'relative',\n            }}\n          />\n        </div>\n        <div style={{ gridArea: 'left-tool', width: 20, paddingTop: 3 }}>\n          {[2, 3, 4].map(x => (\n            <Brick\n              button\n              onClick={this.props.setBrickOperation(1, x)}\n              active={isBrickButonActive(currentOperation, this.props.brickSize, 1, x)}\n              key={x}\n              data-w={1}\n              data-h={x}\n              style={{\n                width: 20, height: 20 * x, position: 'relative', marginBottom: 7, marginTop: -4,\n              }}\n            />\n          )) }\n          <div\n            className={classnames('tool-button', 'trash-button',\n              { buttonActive: currentOperation.type === operations.REMOVE_BRICK })}\n            onClick={this.props.setRemoveBrickOperation}\n            style={{ marginTop: -4 }}\n          />\n        </div>\n        <div\n          className=\"bricks-grid\"\n          onMouseMove={this.cursorPosition}\n          onClick={this.handleOperation()}\n          style={{ ...buildSyleObj(templateSize, step), cursor: makeCursor(currentOperation), gridArea: 'editor' }}\n        >\n          {Object.values(bricks).map((brick) => {\n            const colorId = `${brick.id}-${colorPresetName}`;\n            const color = bricksColors[colorId]\n              ? bricksColors[colorId].color.rgb\n              : null;\n\n            return (\n              <Brick\n                key={brick.id}\n                id={brick.id}\n                className=\"brick\"\n                color={color}\n                style={buildSyleObj({ ...brick.position, ...brick.size }, step)}\n                onClick={this.handleOperation(brick)}\n              />);\n          })}\n          {isActive && currentOperation.type === operations.ADD_BRICK && this.props.position.x > 40 && this.props.position.y > 40\n            ? this.renderBrickPreview(this.state.cursorPosition) : null}\n          {this.renderSector()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GridBricks;\n","import { connect } from 'react-redux';\nimport GridBricks from '../components/GridBricks';\nimport * as actionCreators from '../actions';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    bricks: state.bricks,\n    templateSize: state.templateSize,\n    brickSize: state.brickSize,\n    sector: state.sector,\n    bricksColors: state.bricksColors,\n    colorPresetName: state.colorPresetName,\n  };\n  return props;\n};\n\nconst GridBricksContainer = connect(\n  mapStateToProps,\n  actionCreators,\n)(GridBricks);\n\nexport default GridBricksContainer;\n","import React from 'react';\nimport Brick from './Brick';\nimport { buildSyleObj } from '../helpers';\n\nfunction getColor(bricksColors, brickId, colorPresetName) {\n  const color = bricksColors[`${brickId}-${colorPresetName}`];\n  return color ? color.color.rgb : null;\n}\n\nexport default function Preview({\n  bricks, sector, bricksColors, width, step, colorPresetName,\n}) {\n  const gridSize = 1;\n  const tileArr = new Array(gridSize * gridSize).fill(null);\n  const tiles = tileArr.map((_, i) => (\n    <div key={i} className=\"sectorItem\" style={{ ...buildSyleObj({ width: sector.width, height: sector.height }, step) }}>\n      {bricks.map(({ position, size, id }) => (\n        <Brick\n          key={id}\n          className=\"brick\"\n          color={getColor(bricksColors, id, colorPresetName)}\n          style={buildSyleObj({ ...position, ...size }, step)}\n        />\n      ))}\n    </div>\n  ));\n  return (\n    <div\n      style={{ gridTemplateColumns: new Array(gridSize).fill(null).map(() => `${step * width}px`).join(' ') }}\n      className=\"grid-area-preview\"\n    >\n      {tiles}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { makeRgbStyleProp } from '../../../helpers';\n\n\nexport class ColorPalette extends Component {\n  state = {\n    dropdownOpen: false,\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  }\n\n  setColor = color => () => {\n    this.props.setNewColor(color);\n  }\n\n  removeColor = code => (e) => {\n    e.preventDefault();\n    this.props.removeColor(code);\n  }\n\n  render() {\n    const { colorList } = this.props;\n    return (\n      <div className=\"color-palette\">\n        {Object.values(colorList).map(color => (\n          <div\n            className=\"color-palette-item\"\n            key={color.code}\n            style={{ backgroundColor: makeRgbStyleProp(color.rgb) }}\n            onClick={this.setColor(color)}\n            title={color.code}\n            onContextMenu={this.removeColor(color.code)}\n          />\n        ))}\n      </div>);\n  }\n}\n\nexport default ColorPalette;\n","import React, { Component } from 'react';\nimport './ColorList.css';\nimport ColorPallete from './ColorPalette';\nimport { makeRgbStyleProp } from '../../../helpers';\n\nclass ColorList extends Component {\n  state = {\n    colorList: [],\n  }\n\n  changeColor(colorCode) {\n    const color = this.props.colors[colorCode];\n    this.props.changeColor(color);\n    const { colorList } = this.state;\n    if (colorList.some(x => x.code === colorCode)) return;\n    const newColorList = colorList.length > 5\n      ? colorList.slice(1).concat([color]) : [...colorList, color];\n    this.setState({ colorList: newColorList });\n  }\n\n  render() {\n    return (\n      <div className=\"color-list\">\n        <select\n          onChange={e => this.changeColor(e.target.value)}\n          style={{ backgroundColor: makeRgbStyleProp(this.props.color.rgb), fontSize: '12px', margin: '8px 0 8px' }}\n          value={this.props.color.code}\n        >\n          {Object.values(this.props.colors).map(({ code, rgb }) => (\n            <option\n              style={{ backgroundColor: makeRgbStyleProp(rgb) }}\n              key={code}\n              value={code}\n            >\n              {code}\n            </option>))}\n        </select>\n        <ColorPallete\n          color={this.state.currentColor}\n          setNewColor={this.props.changeColor}\n          colorList={this.state.colorList}\n          setColorList={this.setColorList}\n          removeColor={this.removeColor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ColorList;\n","/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './NumberInput.css';\n\nfunction handleInc(props) {\n  if (!props.onChange || !(props.onChange instanceof Function)) return;\n  if (props.value >= props.max) return;\n  props.onChange(props.value + 1);\n}\n\nfunction handleDec(props) {\n  if (!props.onChange || !(props.onChange instanceof Function)) return;\n  if (props.value <= props.min) return;\n  props.onChange(props.value - 1);\n}\n\nfunction NumberInput(props) {\n  return (\n    <div style={props.style} className=\"number-input\">\n      <div className=\"ctl\" onClick={() => handleDec(props)}>-</div>\n      <div className=\"val\">{props.value}</div>\n      <div className=\"ctl\" onClick={() => handleInc(props)}>+</div>\n    </div>\n  );\n}\n\nNumberInput.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n};\n\n\nexport default NumberInput;\n","import React from 'react';\nimport {\n  Popover, PopoverHeader, PopoverBody,\n} from 'reactstrap';\nimport NumberInput from './NumberInput';\n\n\nexport default class HotKeyPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false,\n    };\n  }\n\n  handleSector = (param, value) => {\n    const newSize = { [param]: Number(value) };\n    this.props.setSectorSize(newSize);\n  }\n\n  toggle() {\n    const { popoverOpen } = this.state;\n    this.setState({\n      popoverOpen: !popoverOpen,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"grid-sector-options-panel\">\n          <span style={{\n            float: 'left', fontSize: 12, marginLeft: 12, position: 'relative', top: 6,\n          }}\n          >\nРазмер текстуры\n          </span>\n          <NumberInput style={{ position: 'relative', top: 4 }} value={this.props.sector.width} min={2} max={11} onChange={v => this.handleSector('width', v)} />\n          <NumberInput style={{ position: 'relative', top: 4 }} value={this.props.sector.height} min={2} max={11} onChange={v => this.handleSector('height', v)} />\n        </div>\n        <div\n          className=\"tool-button\"\n          style={{\n            backgroundColor: 'gray', textAlign: 'center', width: 24, height: 24, borderRadius: 100, position: 'relative', top: 4,\n          }}\n          id=\"Popover1\"\n          onClick={this.toggle}\n          color=\"link\"\n        >\n?\n\n        </div>\n        <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n          <PopoverHeader>Помощь</PopoverHeader>\n          <PopoverBody>\n            <div>\n              Для добавления цвета в палитру выберите его из выпадающего списка.\n              Удаление из палитры правой клавишей мыши.\n              <ul>\n                <li>\n                  <b>зажатый &#34;alt&#34; - изменить цвет кирпича</b>\n                </li>\n                <li>\n                  <b>зажатый &#34;shift&#34; - удалить кирпич</b>\n                </li>\n                <li>\n                  <b>&#34;ctrl+z&#34; - отменить действие</b>\n                </li>\n                <li>\n                  <b>&#34;ctrl+y&#34; - востановить действие</b>\n                </li>\n                <li>\n                  <b>&#34;up, down, left, right&#34; - изменить положение сектора</b>\n                </li>\n                <li>\n                  <b>&#34;+&#34; - увеличить размер сектора</b>\n                </li>\n                <li>\n                  <b>&#34;-&#34; - уменьшить размер сектора</b>\n                </li>\n              </ul>\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { makeRgbStyleProp } from '../../helpers';\n\nclass PaintingPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.changeColorValue = this.changeColorValue.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  state = {\n    colorList: [],\n  }\n\n  addNewColor = () => {\n    const { color } = this.props;\n    const { colorList } = this.state;\n    this.setState({ colorList: [...colorList, { color, value: 1 }] });\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  changeColorValue(colorIndex, value) {\n    const oldColor = this.state.colorList[colorIndex];\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1, { ...oldColor, value });\n      return { colorList };\n    });\n  }\n\n  changeColor(colorIndex, newColorCode) {\n    const oldColor = this.state.colorList[colorIndex];\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1, { color: this.props.colors[newColorCode], value: oldColor.value });\n      return { colorList };\n    });\n  }\n\n  deleteColor(colorIndex) {\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1);\n      return { colorList };\n    });\n  }\n\n  renderColorList() {\n    const { colorList } = this.state;\n    const totalValue = colorList\n      .map(colorEntry => colorEntry.value)\n      .reduce((a, c) => a + c);\n    const getPercent = v => (v === 0 ? 0 : Math.round(v / totalValue * 100));\n    return (\n      <>\n        {colorList.map((colorEntry, i) => (\n          <div key={i} className=\"color-preview\">\n            <div className=\"delete-random-color\" onClick={() => this.deleteColor(i)} />\n            <select onChange={e => this.changeColor(i, e.target.value)} style={{ backgroundColor: makeRgbStyleProp(colorEntry.color.rgb) }}>\n              {Object.values(this.props.colors).map(c => (\n                <option\n                  value={c.code}\n                  key={c.code}\n                  style={{ backgroundColor: makeRgbStyleProp(c.rgb) }}\n                >\n                  {c.code}\n                </option>\n              ))}\n            </select>\n            <input type=\"number\" value={colorEntry.value} min=\"0\" onChange={e => this.changeColorValue(i, Number(e.target.value))} />\n            <span className=\"percent\">\n              {getPercent(colorEntry.value)}\n              %\n            </span>\n          </div>\n        ))}\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ textAlign: 'right', userSelect: 'none' }}>\n          <span style={{ float: 'left', fontSize: 12, marginLeft: 12 }}>Случайная покраска</span>\n          <div className=\"tool-button random-button\" style={{ color: 'transparent' }} onClick={() => this.props.makeRandomPainting(this.state.colorList)} size=\"sm\">i</div>\n          <div className=\"tool-button\" style={{ marginLeft: 6, textAlign: 'center' }} onClick={this.addNewColor} size=\"sm\">+</div>\n        </div>\n        <div style={{ height: 150, overflowY: 'scroll' }}>\n          {this.state.colorList.length > 0 ? this.renderColorList() : null}\n        </div>\n        <Button onClick={this.props.onSave} size=\"sm\" block>Сохранить</Button>\n      </>\n\n    );\n  }\n}\n\nexport default PaintingPanel;\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport ReactCursorPosition from 'react-cursor-position';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport GridBricksContainer from '../containers/GridBricksContainer';\nimport Preview from '../components/Preview';\nimport ColorList from '../components/tools/ColorList/ColorList';\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../actions';\nimport * as operations from '../operations';\nimport colors from '../data/colors.json';\nimport { getBricksInSector, createImage, isOutside, makeBrickColors, getBrickPairs } from '../helpers';\nimport HotKeyPanel from '../components/HotKeyPanel';\nimport './Editor.css';\nimport PaintingPanel from '../components/tools/PaintingPanel';\nimport domtoimage from 'dom-to-image';\n\nconst keyList = ['left', 'up', 'right', 'down', 'alt', 'shift', 'ctrl+z', 'ctrl+y', '+', '-'];\n\nconst containerStyle = {\n  minHeight: 454,\n  display: 'inline-grid',\n  border: '1px solid gray',\n  gridTemplateColumns: 'auto auto',\n  gridTemplateRows: 'auto',\n  gridColumnGap: '10px',\n  gridRowGap: '15px',\n  placeItems: 'flex-start',\n  gridTemplateAreas: '\"editor preview\"',\n};\n\nconst editorLayout = {\n  padding: '6px 0 6px 6px'\n    // display: 'grid',\n    // gridTemplateRows: '300px'\n}\n\nclass _NewEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        operation: { type: operations.ADD_BRICK },\n        workareaStep: 20,\n        tileStep: 15,\n        color: Object.values(colors)[0],\n        isDisabledHandleKey: false,\n      };\n      this.setSectorSize = this.setSectorSize.bind(this);\n      this.setBrickOperation = this.setBrickOperation.bind(this);\n      this.setPaintOperation = this.setPaintOperation.bind(this);\n      this.setRemoveBrickOperation = this.setRemoveBrickOperation.bind(this);\n      this.changeColor = this.changeColor.bind(this);\n      this.makeRandomPainting = this.makeRandomPainting.bind(this);\n      this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n      setInterval(async () => {\n        this.setState({preview: await createImage(this.props.sector.width, this.props.sector.height)})\n      }, 1000);\n  }\n\n  async updatePreview(){\n    this.setState({preview: await createImage(this.props.sector.width, this.props.sector.height)})\n  }\n\n  changeColor = color => this.setState({ color });\n\n  setSectorSize = (size) => {\n    this.props.setSectorSize(size);\n  };\n\n  undoredo = (type) => {\n    const {\n      history,\n      addBrick,\n      removeBrick,\n      changeBrickColor,\n    } = this.props;\n\n    const historyLength = history[type].length;\n\n    if (historyLength === 0) {\n      return;\n    }\n\n    const operationMapping = {\n      [operations.ADD_BRICK]: ({ brick, color, colorPresetName }) => {\n        if (type === 'redo') {\n          return addBrick({ brick, color, colorPresetName });\n        }\n        return removeBrick({ brick });\n      },\n      [operations.REMOVE_BRICK]: ({ brick, color, colorPresetName }) => {\n        if (type === 'undo') {\n          return addBrick({ brick, color, colorPresetName });\n        }\n        return removeBrick({ brick });\n      },\n      [operations.CHANGE_COLOR_BRICK]: ({ brickId, color, colorPresetName }) => (\n        changeBrickColor({\n          brickId,\n          color: type === 'redo' ? color.new : color.old,\n          colorPresetName,\n        })\n      ),\n    };\n    const lastOperations = _.last(history[type]);\n    if (_.isArray(lastOperations)) {\n      lastOperations.forEach((operation) => {\n        operationMapping[operation.type](operation.data);\n      });\n    } else {\n      operationMapping[lastOperations.type](lastOperations.data);\n    }\n    this.props.historySwap({ type });\n  }\n\n  getInsideBricks() {\n    const {\n      bricks,\n      sector,\n    } = this.props;\n    return bricks.filter(({ position, size }) => !isOutside(position, size, sector));\n  }\n\n  makeRandomPainting (colorList) {\n    if (!Object.keys(colorList).length) return;\n    const { bricks, bricksColors } = this.props;\n    const colorPresetName = \"1\";\n    const outsideBricks = Object.values(bricks).filter(({ position, size }) => isOutside(position, size, this.props.sector));\n    const brickPairs = getBrickPairs(outsideBricks);\n    const bricksInPairsIds = _.keyBy(brickPairs, 'id');\n    const brickSets = _.chunk(brickPairs, 2)\n      .concat(Object.values(bricks).filter(x => !(x.id in bricksInPairsIds)).map(x => [x]));\n     const resultColorsList = makeBrickColors(brickSets, colorList);\n    // const resultColorsList = fixColorForPairs(brickColors, brickPairs);\n    const actions = [];\n    Object.keys(resultColorsList).forEach((id) => {\n      const color = resultColorsList[id];\n      const oldColor = bricksColors[`${id}-${colorPresetName}`] ? bricksColors[`${id}-${colorPresetName}`].color : undefined;\n      this.props.changeBrickColor({ brickId: id, color, colorPresetName });\n      actions.push({\n        type: actions.CHANGE_COLOR_BRICK,\n        data: {\n          brickId: id,\n          color: { old: oldColor, new: color },\n          colorPresetName,\n        },\n      });\n    });\n\n    this.props.historyPush({ operations: actions });\n  }\n\n  handleKeyDown = (key) => {\n    const { sector, setSectorSize } = this.props;\n    const keyMapping = {\n      alt: operations.CHANGE_COLOR_BRICK,\n      shift: operations.REMOVE_BRICK,\n      'ctrl+z': this.undoredo.bind(this, 'undo'),\n      'ctrl+y': this.undoredo.bind(this, 'redo'),\n      left: setSectorSize.bind(this, { left: sector.left - 1 }),\n      up: setSectorSize.bind(this, { top: sector.top - 1 }),\n      right: setSectorSize.bind(this, { left: sector.left + 1 }),\n      down: setSectorSize.bind(this, { top: sector.top + 1 }),\n      '+': setSectorSize.bind(this, { width: sector.width + 1, height: sector.height + 1 }),\n      '-': setSectorSize.bind(this, { width: sector.width - 1, height: sector.height - 1 }),\n    }[key];\n\n    if (_.isFunction(keyMapping)) {\n      keyMapping();\n    } else {\n      this.setState({\n        isDisabledHandleKey: true,\n        operation: { type: keyMapping },\n      });\n    }\n  }\n\n  setOperation(operation) {\n    this.setState({ operation });\n  }\n\n  setBrickOperation = (width, height) => () => {\n    console.log('set operation ADD_BRICK', width, height);\n    this.props.changeBrickSize({ size: { width, height } });\n    this.setOperation({ type: operations.ADD_BRICK });\n  }\n\n  setPaintOperation = () => this.setOperation({ type: operations.CHANGE_COLOR_BRICK })\n\n  setRemoveBrickOperation = () => this.setOperation({ type: operations.REMOVE_BRICK });\n\n  handleKeyUp = () => {\n    this.setState({\n      isDisabledHandleKey: false,\n      operation: { type: operations.ADD_BRICK },\n    });\n  }\n\n    // eslint-disable-next-line class-methods-use-this\n    async save() {\n      const img = await domtoimage.toPng(document.querySelector('.sectorItem'), {\n        width: this.props.sector.width * 15,\n        height: this.props.sector.height * 15,\n      });\n      document.querySelector('#preview').src = img;\n      document.body.background = this.state.fillBackground ? img : 'none';\n      if (window.vasya) {\n        window.vasya.save(img);\n      }\n    }\n\n  render() {\n    return (\n    <div style={containerStyle}>\n        <KeyboardEventHandler\n          handleKeys={keyList}\n          isDisabled={this.state.isDisabledHandleKey}\n          handleEventType=\"keydown\"\n          onKeyEvent={this.handleKeyDown}\n          handleFocusableElements\n        />\n        <KeyboardEventHandler\n          handleKeys={keyList}\n          handleEventType=\"keyup\"\n          onKeyEvent={this.handleKeyUp}\n          handleFocusableElements\n        />\n        <div style={editorLayout}>\n            <HotKeyPanel\n              setSectorSize={this.setSectorSize}\n              sector={this.props.sector}/>\n            <ColorList \n              colors={colors}\n              color={this.state.color}\n              changeColor={this.changeColor}/>\n            <ReactCursorPosition>\n            <GridBricksContainer\n                color={this.state.color}\n                currentOperation={this.state.operation}\n                step={20}\n                updateBrickSector={this.updateBrickSector}\n                addToHistory={this.addToHistory}\n                setBrickOperation={this.setBrickOperation}\n                setRemoveBrickOperation={this.setRemoveBrickOperation}\n                setPaintOperation={this.setPaintOperation}\n              />\n            </ReactCursorPosition>\n            <PaintingPanel\n              makeRandomPainting={this.makeRandomPainting}\n              bricks={this.props.bricks}\n              onSave={this.save}\n              colors={colors}\n              color={this.state.color}/>\n        </div>\n        <div style={{width:495, height: '100%', padding: '6px 6px 6px'}}>\n        <div style={{width: '100%', height: '100%', overflow: 'hidden', backgroundColor: '#7f7f7f', position: 'relative', backgroundImage: `url('${this.state.preview}')`}}>\n        </div>\n        </div>\n        <div style={{ position: 'absolute', left: -1000 }}>\n        <Preview\n              bricks={getBricksInSector(this.props.bricks, this.props.sector)}\n              sector={this.props.sector}\n              bricksColors={this.props.bricksColors}\n              width={this.props.sector.width}\n              step={this.state.tileStep}\n              colorPresetName=\"1\"\n            />\n        <img id=\"preview\" alt=\"preview\" src=\"https://via.placeholder.com/1\" />\n        </div>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const props = {\n    bricks: state.bricks,\n    templateSize: state.templateSize,\n    sector: state.sector,\n    bricksColors: state.bricksColors,\n    // colorPresetName: state.colorPresetName,\n    history: state.history,\n    // colorPalette: state.colorPalette,\n  };\n  return props;\n};\n\nconst NewEditor = connect(\n  mapStateToProps,\n  actionCreators,\n)(_NewEditor);\n\nexport default NewEditor;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './styles/App.css';\nimport NewEditor from './containers/NewEditor';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <NewEditor />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { createStore } from 'redux';\nimport uuid from 'uuid/v4';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\nimport App from './App';\n\nfunction makePalette(name = 'new') {\n  return { id: uuid(), name, colors: [] };\n}\n\nconst palette = makePalette('палитра 0');\nconst initialPaletteState = { currentPalette: palette.id, palettes: { [palette.id]: palette } };\n\n(async function init() {\n  let store;\n  if (window.CefSharp) {\n    await window.CefSharp.BindObjectAsync('vasya');\n    const paletteData = window.vasya.loadString('palette');\n    const colorPaletteState = paletteData ? JSON.parse(paletteData) : initialPaletteState;\n    /* eslint-disable no-underscore-dangle */\n    store = createStore(\n      reducers({ colorPaletteState }),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n    /* eslint-enable */\n    let currentPalette;\n    store.subscribe(() => {\n      const prevPalette = currentPalette;\n      currentPalette = store.getState().colorPalette;\n      if (prevPalette === currentPalette) return;\n      window.vasya.saveString('palette', JSON.stringify(currentPalette));\n    });\n  } else {\n    /* eslint-disable no-underscore-dangle */\n    store = createStore(\n      reducers({ colorPaletteState: initialPaletteState }),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n  /* eslint-enable */\n  }\n  ReactDOM.render(<App store={store} />, document.getElementById('root'));\n}());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}