{"version":3,"sources":["images/import.svg","images/export.svg","serviceWorker.js","actions/index.js","reducers/colorPalette.js","operations.js","helpers/index.js","reducers/index.js","components/Brick.jsx","components/GridBricks.jsx","containers/GridBricksContainer.js","components/Preview.jsx","components/tools/ColorList/ColorPalette.jsx","components/tools/ColorList/ColorList.jsx","components/NumberInput.jsx","helpers/bricksBuilder.js","components/HotKeyPanel.jsx","components/tools/PaintingPanel.jsx","containers/NewEditor.jsx","App.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","addBrick","createAction","removeBrick","resetBricks","changeBrickSize","changeBrickColor","resetBrickColors","changeTemplateSize","setSectorSize","changePresetName","setColor","changeCurrentPreset","historyPush","historySwap","historyRemove","addColorPalette","removeColorPalette","addColorToPalette","removeColorFromPalette","switchPalette","switchTextureType","addRandomPalette","setRandomPalettes","removeRandomPalette","colorPalette","initialState","_handleActions","console","log","handleActions","Object","defineProperty","actions","state","newPalette","name","arguments","length","undefined","id","uuid","colors","makePalette","concat","keys","palettes","objectSpread","currentPalette","action","payload","filter","x","code","ADD_BRICK","REMOVE_BRICK","CHANGE_COLOR_BRICK","getGridPos","y","step","left","Math","floor","top","buildSyleObj","styleObj","reduce","acc","key","generateBricksMatrix","bricks","brickMatrix","values","forEach","brick","size","width","height","position","getBrickPosition","cursorPosition","_ref","round","makeRgbStyleProp","rgb","getBricksInSector","sector","bricksInSectorMap","bricksInSector","tileBricks","map","createImage","_x","_x2","_createImage","apply","this","_callee","sectorWidth","sectorHeight","img","regenerator_default","a","wrap","_context","prev","next","domtoimage","toPng","document","querySelector","sent","abrupt","stop","isOutside","relPos","some","item","calculateMirrorBrick","_ref2","horizontalOffset","verticalOffset","newPos","isOverSize","makeBrickColors","bricksPairs","colorMap","totalValue","value","c","colorBrickCount","newColors","color","n","i","random","Error","getColor","b","isBrickButonActive","operation","w","h","type","builGradientForPalette","randomPalette","colorsArr","colorPercent","colorList","colorEntry","getPercent","percent","percentFrom","percentTo","toConsumableArray","_ref3","join","rgbToHex","r","g","r1","toString","g1","b1","toUpperCase","getMirrorBrick","sectorWdth","find","reducers_handleActions","_","omit","brickSize","templateSize","_ref4","newSize","_ref5","bricksColors","_handleActions5","_ref6","_ref6$payload","colorPresetName","presetId","brickId","_ref7","_ref7$payload","mapValues","_ref8","omitBy","_ref9","history","_handleActions6","_ref10","operations","undo","redo","_ref11","slice","last","_ref12","textureType","randomPaletts","_handleActions9","_ref13","split","sort","_ref14","randomPalettes","_ref15","reducers","_ref16","colorPaletteState","combineReducers","React","memo","style","onClick","button","active","rgbColor","react_default","createElement","className","classnames","backgroundColor","borderColor","makeCursor","containerStyle","display","gridTemplateColumns","gridTemplateRows","justifyItems","alignItems","gridTemplateAreas","topToolStyle","gridArea","GridBricks","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","_this$props$position","currentCell","setState","keyBoardEvents","event","newBrick","_this$props2","mirrorBrick","push","data","lastAction","currentOperation","resultAction","_this$props3","_this$props4","oldColor","old","new","handleOperation","e","stopPropagation","_method","method","disablePaintButton","_this$props5","lineH1","lineH2","lineV1","lineV2","Brick","_this2","_this$props6","isActive","marginBottom","setBrickOperation","marginRight","buttonActive","setPaintOperation","marginLeft","paddingTop","data-w","data-h","marginTop","setRemoveBrickOperation","onMouseMove","cursor","colorId","renderBrickPreview","renderSector","Component","GridBricksContainer","connect","actionCreators","Preview","tiles","Array","gridSize","fill","ColorPalette","_Component","_getPrototypeOf2","_len","args","_key","dropdownOpen","toggle","prevState","setNewColor","removeColor","preventDefault","inherits","createClass","title","onContextMenu","ColorList","colorCode","changeColor","newColorList","onChange","target","fontSize","margin","ColorList_ColorPalette","currentColor","setColorList","NumberInput","Function","min","handleDec","max","handleInc","buildBriksForNewSectorSize","teilwidth","teilheight","newBricks","_loop","isEqual","HotKeyPanel","handleSector","param","Number","confirmChangeSectorSize","bind","assertThisInitialized","popoverOpen","float","components_NumberInput","v","textAlign","borderRadius","reactstrap_es","placement","isOpen","PaintingPanel","historyColorList","palettesVisible","addNewColor","handleHisoryListClick","handlePreviewListClick","newHistory","handlePalettesVisible","onClickRandomPalett","changeColorValue","colorIndex","splice","newColorCode","_this3","Fragment","deleteColor","_this4","background","backgroundSize","_this5","_this6","renderPreviewHistory","renderRandomPalette","userSelect","backgroundImage","importIcon","vasya","importPaintingPalettes","required","exportIcon","exportPaintingPalettes","defaultPainting","makeRandomPainting","overflowY","renderColorList","onSaveRandomPalette","block","onSave","keyList","sectorSizeControlButton","Set","minHeight","border","gridColumnGap","gridRowGap","placeItems","editorLayout","padding","_NewEditor","confirm","handleKeyDown","has","keyMapping","alt","shift","ctrl+z","undoredo","ctrl+y","up","right","down","+","-","isFunction","isDisabledHandleKey","setOperation","randomPallete","paletteId","json","loadPalette","JSON","parse","files","file","reader","FileReader","onloadend","Base64","decode","result","readAsText","stringify","savePalette","Blob","encode","csvURL","URL","createObjectURL","tempLink","href","setAttribute","click","handleKeyUp","_operationMapping","operationMapping","lastOperations","isArray","makePainingForCustomSectorSize","_this$state","customSector","newBriks","brickPairs","getBrickPairs","_bricks","toArray","head","tail","pair","brick1","brick2","conditions1","every","conditions2","isPair","restBricks","without","flatten","_ref4$position","bricksInPairsIds","keyBy","resultColorsList","chunk","brickColors","customSectorBricks","customSectorBrickColors","handleTileSize","_this$setState","_this$state2","tileStep","newTailWidth","newTailHeight","widthGrixdSize","ceil","heightGridSize","showGrid","save","setInterval","asyncToGenerator","mark","_this2$state$customSe","t0","t1","t2","preview","t3","t4","t5","op","src","body","fillBackground","checked","rows","cols","j","boxSizing","react_keyboard_event_handler_default","handleKeys","isDisabled","handleEventType","onKeyEvent","handleFocusableElements","HotKeyPanel_HotKeyPanel","tools_ColorList_ColorList","textureTypePanel","ReactCursorPosition","containers_GridBricksContainer","tools_PaintingPanel","overflow","renderGrid","NewEditor","App","store","es","containers_NewEditor","palette","initialPaletteState","_init","paletteData","CefSharp","BindObjectAsync","loadString","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","saveString","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d3bf015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/import.1badb99d.svg\";","module.exports = __webpack_public_path__ + \"static/media/export.301c5552.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import _ from 'lodash';\nimport { createAction } from 'redux-actions';\n\nexport const addBrick = createAction('ADD_BRICK');\n\nexport const removeBrick = createAction('REMOVE_BRICK');\n\nexport const resetBricks = createAction('RESET_BRICKS');\n\n\nexport const changeBrickSize = createAction('CHANGE_BRICK_SIZE');\n\nexport const changeBrickColor = createAction('CHANGE_BRICK_COLOR');\nexport const resetBrickColors = createAction('RESET_BRICK_COLOR');\n\n\nexport const changeTemplateSize = createAction('CHANGE_TEMPLATE_SIZE');\n\nexport const setSectorSize = createAction('SET_SECTOR_SIZE');\n\nexport const changePresetName = createAction('CHANGE_PRESET_NAME');\n\nexport const setColor = createAction('SET_COLOR');\n\nexport const changeCurrentPreset = createAction('CHANGE_CURRENT_PRESET');\n\nexport const historyPush = createAction('HISTORY_PUSH');\nexport const historySwap = createAction('HISTORY_SWAP');\nexport const historyRemove = createAction('HISTORY_REMOVE');\n\nexport const addColorPalette = createAction('ADD_COLOR_PALETTE');\nexport const removeColorPalette = createAction('REMOVE_COLOR_PALETTE');\nexport const addColorToPalette = createAction('ADD_COLOR_TO_PALETTE');\nexport const removeColorFromPalette = createAction('REMOVE_COLOR_TO_PALETTE');\nexport const switchPalette = createAction('SWITCH_PALETTE');\n\nexport const switchTextureType = createAction('SWITCH_TEXTURE_TYPE');\n\nexport const addRandomPalette = createAction('ADD_RANDOM_PALETTE');\nexport const setRandomPalettes = createAction('SET_RANDOM_PALETTE');\nexport const removeRandomPalette = createAction('REMOVE_RANDOM_PALETTE');\n","import uuid from 'uuid/v4';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\n\nfunction makePalette(name = 'new') {\n  return { id: uuid(), name, colors: [] };\n}\n\nconst colorPalette = (initialState) => {\n  console.log('INIT PALETTE', initialState);\n  return handleActions({\n    [actions.addColorPalette](state) {\n      const newPalette = makePalette(`палитра ${Object.keys(state.palettes).length}`);\n      return {\n        ...state,\n        currentPalette: newPalette.id,\n        palettes: { ...state.palettes, [newPalette.id]: newPalette },\n      };\n    },\n    [actions.switchPalette](state, action) {\n    // TODO: assert\n      return { ...state, currentPalette: action.payload };\n    },\n    [actions.removeColorFromPalette](state, action) {\n      return {\n        ...state,\n        palettes: {\n          ...state.palettes,\n          [state.currentPalette]:\n            {\n              ...state.palettes[state.currentPalette],\n              colors: state.palettes[state.currentPalette].colors.filter(x => (\n                x.code !== action.payload)),\n            },\n        },\n      };\n    },\n    [actions.addColorToPalette](state, action) {\n      const currentPalette = state.palettes[state.currentPalette];\n      return {\n        ...state,\n        palettes: {\n          ...state.palettes,\n          [state.currentPalette]: {\n            ...currentPalette,\n            colors: currentPalette.colors.concat([action.payload]),\n          },\n        },\n      };\n    },\n  }, initialState);\n};\n\nexport default colorPalette;\n","export const ADD_BRICK = 'ADD_BRICK';\nexport const REMOVE_BRICK = 'REMOVE_BRICK';\nexport const CHANGE_COLOR_BRICK = 'CHANGE_COLOR_BRICK';\nexport const CANCEL_EVENT = 'CANCEL_EVENT';\n","import domtoimage from 'dom-to-image';\nimport _ from 'lodash';\nimport uuid from 'uuid/v4';\nimport { ADD_BRICK } from '../operations';\n\nexport const getGridPos = (x, y, step) => {\n  const left = Math.floor(x / step);\n  const top = Math.floor(y / step);\n  return { left, top };\n};\n\nexport const buildSyleObj = (styleObj, step) => Object.keys(styleObj)\n  .reduce((acc, key) => ({ ...acc, [key]: styleObj[key] * step }), {});\n\nexport const gridSizeValidate = (size, gridSizeLimit) => (\n  (size > 0) && (size <= gridSizeLimit) ? size : gridSizeLimit);\n\nexport function generateBricksMatrix(bricks) {\n  const brickMatrix = {};\n  Object.values(bricks).forEach((brick) => {\n    for (let x = 0; x < brick.size.width; x += 1) {\n      for (let y = 0; y < brick.size.height; y += 1) {\n        brickMatrix[`${x + brick.position.left};${y + brick.position.top}`] = brick;\n      }\n    }\n  });\n  return brickMatrix;\n}\n\nexport function getBrickPosition(cursorPosition, { width, height }) {\n  if (width === 1 && height === 1) return cursorPosition;\n  return width > height\n    ? { top: cursorPosition.top, left: cursorPosition.left - Math.round(width / 2) }\n    : { left: cursorPosition.left, top: cursorPosition.top - Math.round(height / 2) };\n}\n\n\nexport const makeRgbStyleProp = rgb => (rgb ? `rgb(${rgb})` : 'rgb(214,199,148)');\n\nexport function getBricksInSector(bricks, sector) {\n  const brickMatrix = generateBricksMatrix(bricks);\n  const bricksInSectorMap = {};\n  for (let x = 0; x < sector.width; x += 1) {\n    for (let y = 0; y < sector.height; y += 1) {\n      const brick = brickMatrix[`${x + sector.left};${y + sector.top}`];\n      if (brick && !bricksInSectorMap[brick.id]) {\n        bricksInSectorMap[brick.id] = brick;\n      }\n    }\n  }\n  const bricksInSector = Object.values(bricksInSectorMap);\n  const tileBricks = Object.values(bricksInSector).map((brick) => {\n    const { position } = brick;\n    const left = position.left - sector.left;\n    const top = position.top - sector.top;\n    return { ...brick, position: { left, top } };\n  });\n  if (bricksInSector.length > 0) {\n    return tileBricks;\n  }\n  return [];\n}\n\nexport async function createImage(sectorWidth, sectorHeight) {\n  const img = await domtoimage.toPng(document.querySelector('.sectorItem'), {\n    width: sectorWidth * 15,\n    height: sectorHeight * 15,\n  });\n  return img;\n}\n\nexport function isOutside(position, size, sector) {\n  const relPos = { left: position.left - sector.left, top: position.top - sector.top };\n  const conditions = [\n    relPos.left < 0 || relPos.top < 0,\n    relPos.left + size.width > sector.width,\n    relPos.top + size.height > sector.height,\n  ];\n  return conditions.some(item => item);\n}\n\nexport const calculateMirrorBrick = ({ position, size }, sector) => {\n  const horizontalOffset = position.left > 0 ? -sector.width : sector.width;\n  const verticalOffset = position.top > 0 ? -sector.height : sector.height;\n  if (size.width > size.height) {\n    const newPos = {\n      left: position.left + horizontalOffset + sector.left,\n      top: position.top + sector.top,\n    };\n    return { id: uuid(), position: newPos, size };\n  }\n\n  const newPos = {\n    left: position.left + sector.left,\n    top: position.top + verticalOffset + sector.top,\n  };\n  return { id: uuid(), position: newPos, size };\n};\n\nexport const isOverSize = (size, sector) => {\n  if (size.width > size.height) {\n    return size.width > sector.width;\n  }\n  return size.height > sector.height;\n};\n\nexport function isPair(brick1, brick2) {\n  const conditions1 = [\n    brick1.size.width === 1,\n    brick1.position.left === brick2.position.left,\n  ].every(item => item);\n  const conditions2 = [\n    brick1.size.height === 1,\n    brick1.position.top === brick2.position.top,\n  ].every(item => item);\n  return conditions1 || conditions2;\n}\n\nexport function getBrickPairs(bricks) {\n  if (bricks.length < 2) return [];\n  const [head, ...tail] = bricks;\n  const pair = _.find(tail, brick => isPair(head, brick));\n  if (!pair && tail.length === 0) {\n    return [];\n  }\n  if (!pair && tail.length > 0) {\n    return getBrickPairs(tail);\n  }\n\n  const restBricks = _.without(tail, pair);\n  if (restBricks.length === 0) {\n    return [head, pair];\n  }\n  return _.flatten([[head, pair], ...getBrickPairs(restBricks)]);\n}\n\nexport function makeBrickColors(bricksPairs, colorMap) {\n  const colors = Object.values(colorMap);\n  const totalValue = colors.map(x => x.value).reduce((a, c) => a + c);\n  const colorParts = colors.map(x => x.value / totalValue);\n  const colorBrickCount = colorParts.map(x => Math.round(bricksPairs.length * x));\n  const getColor = () => {\n    let n = 0;\n    while (n < 100) {\n      n += 1;\n      const i = Math.floor(Math.random() * colorBrickCount.length);\n      if (colorBrickCount.reduce((a, c) => a + c) === 0) {\n        return colors[i].color;\n      }\n      if (colorBrickCount[i] > 0) {\n        colorBrickCount[i] -= 1;\n        return colors[i].color;\n      }\n    }\n    throw new Error('coloring iterations exceeded');\n  };\n  const newColors = {};\n  Object.values(bricksPairs).forEach((bricks) => {\n    const color = getColor();\n    bricks.forEach((b) => {\n      newColors[b.id] = color;\n    });\n  });\n  return newColors;\n}\n\nexport function isBrickButonActive(operation, size, w, h) {\n  if (operation.type !== ADD_BRICK) return false;\n  return w === size.width && h === size.height;\n}\n\nexport const getPercent = (colorList, value) => {\n  const totalValue = colorList\n    .map(colorEntry => colorEntry.value)\n    .reduce((a, c) => a + c);\n  return (value === 0 ? 0 : Math.round(value / totalValue * 100));\n};\n\nexport const builGradientForPalette = (randomPalette) => {\n  const colorsArr = randomPalette.reduce((acc, item, i) => {\n    const { value, color: { rgb } } = item;\n    const colorPercent = getPercent(randomPalette, value);\n    const color = makeRgbStyleProp(rgb);\n    if (i === 0) {\n      return [{ color, percent: 0 }, { color, percent: colorPercent }];\n    }\n    const percentFrom = acc[acc.length - 1].percent;\n    const percentTo = percentFrom + colorPercent;\n    return [...acc, { color, percent: percentFrom }, { color, percent: percentTo }];\n  }, []);\n\n  const result = `linear-gradient(to right, ${colorsArr.map(({ color, percent }) => `${color} ${percent}%`).join(', ')})`;\n  return result;\n};\n\nconst rgbToHex = (r, g, b) => {\n  let r1 = r.toString(16);\n  let g1 = g.toString(16);\n  let b1 = b.toString(16);\n  if (r.length === 1) r1 = `0${r}`;\n  if (g.length === 1) g1 = `0${g}`;\n  if (b.length === 1) b1 = `0${b}`;\n\n  return (r1 + g1 + b1).toUpperCase();\n};\n\nexport const buildRandomPalleteId = randomPallete => randomPallete\n  .map(({ color: { rgb }, value }) => ({ value, color: rgbToHex(...rgb.split(',')) }))\n  .sort((a, b) => {\n    if (a.color > b.color) return 1;\n    if (a.color < b.color) return -1;\n    return 0;\n  })\n  .reduce((acc, { color, value }) => `${acc}${color}${value}`, '');\n\nexport const getMirrorBrick = (brick, bricks, sector) => {\n  if (brick.size.width > brick.size.height) {\n    const sectorWdth = brick.position.left < sector.left ? sector.width : -sector.width; // Если выступает слева то + если справа -\n    // eslint-disable-next-line no-debugger\n    // debugger;\n    return Object.values(bricks).find(b => (b.position.left === (brick.position.left + sectorWdth) && b.position.top === brick.position.top));\n  }\n\n  const sectorHeight = brick.position.top < sector.top ? sector.height : -sector.height; // Если выступает слева то + если справа -\n  return Object.values(bricks).find(b => (b.position.top === (brick.position.top + sectorHeight) && b.position.left === brick.position.left));\n};\n","import { handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport colorPalette from './colorPalette';\nimport { buildRandomPalleteId } from '../helpers';\n\nconst bricks = handleActions({\n  [actions.addBrick](state, { payload: { brick } }) {\n    return { ...state, [brick.id]: brick };\n  },\n  [actions.removeBrick](state, { payload: { brick } }) {\n    return _.omit(state, brick.id);\n  },\n  [actions.resetBricks]() {\n    return {};\n  },\n}, {});\n\nconst initBrickSize = {\n  width: 1,\n  height: 1,\n};\nexport const brickSize = handleActions({\n  [actions.changeBrickSize](state, { payload: { size } }) {\n    return size;\n  },\n}, initBrickSize);\n\nconst initTemplateSize = {\n  width: 10,\n  height: 10,\n};\nconst templateSize = handleActions({\n  [actions.changeTemplateSize](state, { payload: { newSize } }) {\n    return { ...state, ...newSize };\n  },\n}, initTemplateSize);\n\nconst initSectorSize = {\n  left: 3,\n  top: 3,\n  width: 4,\n  height: 4,\n};\nconst sector = handleActions({\n  [actions.setSectorSize](state, { payload }) {\n    return { ...state, ...payload };\n  },\n}, initSectorSize);\n\nconst bricksColors = handleActions({\n  [actions.addBrick](state, { payload: { brick: { id }, color, colorPresetName } }) {\n    const presetId = `${id}-${colorPresetName}`;\n    return { ...state, [presetId]: { colorPresetName, brickId: id, color } };\n  },\n  [actions.changeBrickColor](state, { payload: { brickId, color, colorPresetName } }) {\n    const presetId = `${brickId}-${colorPresetName}`;\n    return { ...state, [presetId]: { colorPresetName, brickId, color } };\n  },\n  [actions.resetBrickColors](state) {\n    return _.mapValues(state, (item => ({ ...item, color: { code: 'NCS S 0500 - N (белый)', rgb: '250,250,250' } })));\n  },\n  [actions.removeBrick](state, { payload: { brick } }) {\n    return _.omitBy(state, ({ brickId }) => brickId === brick.id);\n  },\n  [actions.changePresetName](state) {\n    return state;\n  },\n}, {});\n\nconst history = handleActions({\n  [actions.historyPush](state, { payload: { operations } }) {\n    const newHistory = [...state.undo, operations];\n    return { undo: newHistory, redo: [] };\n  },\n  [actions.historySwap](state, { payload: { type } }) {\n    const { undo, redo } = state;\n    if (type === 'undo') {\n      return {\n        undo: undo.slice(0, undo.length - 1),\n        redo: [...redo, _.last(undo)],\n      };\n    }\n    return {\n      undo: [...undo, _.last(redo)],\n      redo: redo.slice(0, redo.length - 1),\n    };\n  },\n  [actions.historyRemove]() {\n    return { undo: [], redo: [] };\n  },\n}, { undo: [], redo: [] });\n\nconst colorPresetName = handleActions({\n  [actions.changePresetName](state, { payload: { name } }) {\n    return name;\n  },\n}, '1');\n\nconst textureType = handleActions({\n  [actions.switchTextureType](state) {\n    if (state === 'brick') return 'tile';\n    return 'brick';\n  },\n}, 'brick');\n\nconst randomPaletts = handleActions({\n  [actions.addRandomPalette](state, { payload: randomPalette }) {\n    const id = buildRandomPalleteId(randomPalette);\n    return { ...state, [id]: randomPalette };\n  },\n  [actions.setRandomPalettes](state, { payload: randomPalettes }) {\n    return { ...randomPalettes };\n  },\n  [actions.removeRandomPalette](state, { payload: id }) {\n    return _.omit(state, id);\n  },\n}, {});\n\nexport default ({ colorPaletteState }) => combineReducers({\n  bricks,\n  templateSize,\n  brickSize,\n  sector,\n  bricksColors,\n  history,\n  colorPresetName,\n  textureType,\n  randomPaletts,\n  colorPalette: colorPalette(colorPaletteState),\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { makeRgbStyleProp } from '../helpers';\n\nconst brickBorderColor = 'rgb(0,0,0)';\nconst tileBorderColor = 'rgb(1,1,1)';\n\n\nconst _brick = ({ style, color, onClick, button, active, textureType }) => {  //eslint-disable-line\n  const rgbColor = makeRgbStyleProp(color);\n  return (\n    <div\n      onClick={onClick}\n      className={classnames('brick', { button, active })}\n      style={{\n        ...style,\n        backgroundColor: rgbColor,\n        borderColor: textureType === 'brick' ? brickBorderColor : tileBorderColor,\n      }}\n    />\n  );\n};\n\nexport default React.memo(_brick);\n","import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\n\nimport classnames from 'classnames';\nimport Brick from './Brick';\nimport * as operations from '../operations';\nimport {\n  getGridPos,\n  buildSyleObj,\n  generateBricksMatrix,\n  getBrickPosition,\n  isBrickButonActive,\n  isOutside,\n  getBricksInSector,\n  calculateMirrorBrick,\n  isOverSize,\n  getMirrorBrick,\n} from '../helpers';\n\nfunction makeCursor(operation) {\n  switch (operation.type) {\n    case 'CHANGE_COLOR_BRICK':\n      return 'crosshair';\n    case 'REMOVE_BRICK':\n      return 'default';\n    case 'ADD_BRICK':\n      return 'default';\n    default: return 'default';\n  }\n}\n\nconst containerStyle = {\n  display: 'grid',\n  gridTemplateColumns: '26px auto',\n  gridTemplateRows: '26px auto',\n  justifyItems: 'left',\n  alignItems: 'left',\n  gridTemplateAreas: '\"top-tool top-tool\" \"left-tool editor\"',\n};\n\nconst topToolStyle = {\n  gridArea: 'top-tool', display: 'block', width: '100%', height: '100%',\n};\n\nclass GridBricks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cursorPosition: { left: 0, top: 0 },\n    };\n  }\n\n  cursorPosition = () => {\n    const { position: { x, y }, step } = this.props;\n    const currentCell = getGridPos(x - 26, y - 26, step);\n    this.setState({ cursorPosition: currentCell });\n  };\n\n  keyBoardEvents = (event) => {\n    console.log(event.key);\n  }\n\n  addBrick = () => {\n    const newBrick = {\n      id: uuid(),\n      position: getBrickPosition(this.state.cursorPosition, this.props.brickSize),\n      size: this.props.brickSize,\n    };\n    const { bricks, colorPresetName, color } = this.props;\n    const brickMatrix = generateBricksMatrix(bricks);\n    const actions = [];\n    for (let x = 0; x < newBrick.size.width; x += 1) {\n      for (let y = 0; y < newBrick.size.height; y += 1) {\n        if (brickMatrix[`${x + newBrick.position.left};${y + newBrick.position.top}`]) {\n          return; // off auto remove bricks\n          // const brick =\n          //  brickMatrix[`${x + newBrick.position.left};${y + newBrick.position.top}`];\n\n          // const oldColor = this.props.bricksColors[`${brick.id}-${colorPresetName}`]\n          //   ? this.props.bricksColors[`${brick.id}-${colorPresetName}`].color\n          //   : { rgb: 'rgb(214,199,148)' };\n\n          // this.props.removeBrick({ brick });\n          // actions.push({\n          //   type: operations.REMOVE_BRICK,--e },\n          // });\n        }\n      }\n    }\n    if (isOutside(newBrick.position, newBrick.size, this.props.sector)) {\n      const brick = getBricksInSector([newBrick], this.props.sector)[0];\n      if (brick) {\n        if (isOverSize(brick.size, this.props.sector)) return;\n        const mirrorBrick = calculateMirrorBrick(brick, this.props.sector);\n\n        for (let x = 0; x < mirrorBrick.size.width; x += 1) {\n          for (let y = 0; y < mirrorBrick.size.height; y += 1) {\n            if (brickMatrix[`${x + mirrorBrick.position.left};${y + mirrorBrick.position.top}`]) {\n              return;\n            }\n          }\n        }\n        this.props.addBrick({ brick: mirrorBrick, color, colorPresetName });\n        actions.push({\n          type: operations.ADD_BRICK,\n          data: { brick: mirrorBrick, color, colorPresetName },\n        });\n      }\n    }\n    this.props.addBrick({ brick: newBrick, color, colorPresetName });\n\n    const lastAction = ({\n      type: this.props.currentOperation.type,\n      data: { brick: newBrick, color, colorPresetName },\n    });\n    const resultAction = actions.length > 0 ? [...actions, lastAction] : lastAction;\n    this.props.historyPush({ operations: resultAction });\n  }\n\n  removeBrick = (brick) => {\n    const { colorPresetName, color } = this.props;\n    if (brick) {\n      this.props.removeBrick({ brick });\n      const action = {\n        type: this.props.currentOperation.type,\n        data: { brick, color, colorPresetName },\n      };\n      this.props.historyPush({ operations: action });\n    }\n  }\n\n  changeBrickColor = (brick) => {\n    if (brick) {\n      const { color, colorPresetName, bricksColors } = this.props;\n      const oldColor = bricksColors[`${brick.id}-${colorPresetName}`] ? bricksColors[`${brick.id}-${colorPresetName}`].color : undefined;\n      const actions = [];\n\n      if (isOutside(brick.position, brick.size, this.props.sector)) {\n        const brickInSector = getBricksInSector([brick], this.props.sector)[0];\n        if (brickInSector) {\n          const mirrorBrick = getMirrorBrick(brick, this.props.bricks, this.props.sector);\n          if (mirrorBrick) {\n            this.props.changeBrickColor({ brickId: mirrorBrick.id, color, colorPresetName });\n            actions.push({\n              type: this.props.currentOperation.type,\n              data: {\n                brickId: mirrorBrick.id,\n                color: { old: oldColor, new: color },\n                colorPresetName,\n              },\n            });\n          }\n        }\n      }\n\n      this.props.changeBrickColor({ brickId: brick.id, color, colorPresetName });\n      actions.push({\n        type: this.props.currentOperation.type,\n        data: {\n          brickId: brick.id,\n          color: { old: oldColor, new: color },\n          colorPresetName,\n        },\n      });\n      this.props.historyPush({ operations: actions });\n    }\n  }\n\n  handleOperation = brick => (e) => {\n    e.stopPropagation();\n    const { currentOperation: { type } } = this.props;\n    if (type) {\n      const method = {\n        [operations.ADD_BRICK]: this.addBrick,\n        [operations.REMOVE_BRICK]: this.removeBrick,\n        [operations.CHANGE_COLOR_BRICK]: this.props.disablePaintButton ? null : this.changeBrickColor,\n      };\n      if (!method[type]) return;\n      method[type](brick);\n    }\n  }\n\n  renderSector() {\n    const { step, sector } = this.props;\n    const lineThickness = 2;\n    const lineH1 = {\n      left: 0,\n      top: 0,\n      width: sector.width * step,\n      height: lineThickness,\n    };\n    const lineH2 = {\n      left: 0,\n      top: sector.height * step,\n      width: sector.width * step,\n      height: lineThickness,\n    };\n    const lineV1 = {\n      left: 0,\n      top: 0,\n      width: lineThickness,\n      height: sector.height * step,\n    };\n    const lineV2 = {\n      left: sector.width * step,\n      top: 0,\n      width: lineThickness,\n      height: sector.height * step + lineThickness,\n    };\n    return (\n      <div className=\"templateSector\" style={{ ...buildSyleObj(sector, this.props.step), width: 0, height: 0 }}>\n        <div className=\"sectorLine\" style={lineH1} />\n        <div className=\"sectorLine\" style={lineH2} />\n        <div className=\"sectorLine\" style={lineV1} />\n        <div className=\"sectorLine\" style={lineV2} />\n      </div>\n    );\n  }\n\n  renderBrickPreview(cursorPosition) {\n    const position = getBrickPosition(cursorPosition, this.props.brickSize);\n    const style = buildSyleObj({ ...this.props.brickSize, ...position }, this.props.step);\n    return (\n      <Brick\n        style={style}\n        color={this.props.color.rgb}\n        textureType={this.props.textureType}\n      />\n    );\n  }\n\n  render() {\n    const {\n      isActive,\n      currentOperation,\n      step,\n      bricks,\n      bricksColors,\n      colorPresetName,\n      textureType,\n    } = this.props;\n\n    const templateSize = { height: 11, width: 11 };\n    return (\n      <div style={{ ...containerStyle, marginBottom: textureType === 'tile' ? '17px' : 0 }}>\n        <div style={topToolStyle}>\n          {[1, 2, 3, 4].filter(x => (textureType === 'tile' ? x === 3 : true)).map(x => (\n            <Brick\n              button\n              active={isBrickButonActive(currentOperation, this.props.brickSize, x, 1)}\n              onClick={this.props.setBrickOperation(x, 1)}\n              key={x}\n              style={{\n                width: x * 20, height: 20, position: 'relative', marginRight: 6,\n              }}\n              textureType={this.props.textureType}\n            />\n          )) }\n          <div\n            className={classnames('tool-button', 'paint-button',\n              { buttonActive: currentOperation.type === operations.CHANGE_COLOR_BRICK })}\n            onClick={this.props.setPaintOperation}\n            style={{\n              backgroundColor: this.props.disablePaintButton ? 'gray' : `rgb(${this.props.color.rgb})`,\n              display: 'inline-block',\n              marginLeft: 1,\n              top: -1,\n              position: 'relative',\n            }}\n          />\n        </div>\n        <div style={{ gridArea: 'left-tool', width: 20, paddingTop: 3 }}>\n          {[2, 3, 4].filter(x => (textureType === 'tile' ? x === 3 : true)).map(x => (\n            <Brick\n              button\n              onClick={this.props.setBrickOperation(1, x)}\n              active={isBrickButonActive(currentOperation, this.props.brickSize, 1, x)}\n              key={x}\n              data-w={1}\n              data-h={x}\n              style={{\n                width: 20, height: 20 * x, position: 'relative', marginBottom: 7, marginTop: -4,\n              }}\n              textureType={this.props.textureType}\n            />\n          )) }\n          <div\n            className={classnames('tool-button', 'trash-button',\n              { buttonActive: currentOperation.type === operations.REMOVE_BRICK })}\n            onClick={this.props.setRemoveBrickOperation}\n            style={{ marginTop: -4 }}\n          />\n        </div>\n        <div\n          className=\"bricks-grid\"\n          onMouseMove={this.cursorPosition}\n          onClick={this.handleOperation()}\n          style={{\n            ...buildSyleObj(templateSize, step),\n            cursor: this.props.disablePaintButton ? 'default' : makeCursor(currentOperation),\n            gridArea: 'editor',\n          }}\n        >\n          {Object.values(bricks).map((brick) => {\n            const colorId = `${brick.id}-${colorPresetName}`;\n            const color = bricksColors[colorId]\n              ? bricksColors[colorId].color.rgb\n              : null;\n\n            return (\n              <Brick\n                key={brick.id}\n                id={brick.id}\n                className=\"brick\"\n                color={color}\n                style={buildSyleObj({ ...brick.position, ...brick.size }, step)}\n                onClick={this.handleOperation(brick)}\n                textureType={this.props.textureType}\n              />);\n          })}\n          {isActive && currentOperation.type === operations.ADD_BRICK\n            && this.props.position.x > 40 && this.props.position.y > 40\n            ? this.renderBrickPreview(this.state.cursorPosition) : null}\n          {this.renderSector()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GridBricks;\n","import { connect } from 'react-redux';\nimport GridBricks from '../components/GridBricks';\nimport * as actionCreators from '../actions';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    bricks: state.bricks,\n    templateSize: state.templateSize,\n    brickSize: state.brickSize,\n    sector: state.sector,\n    bricksColors: state.bricksColors,\n    colorPresetName: state.colorPresetName,\n    textureType: state.textureType,\n  };\n  return props;\n};\n\nconst GridBricksContainer = connect(\n  mapStateToProps,\n  actionCreators,\n)(GridBricks);\n\nexport default GridBricksContainer;\n","import React from 'react';\nimport Brick from './Brick';\nimport { buildSyleObj } from '../helpers';\n\nfunction getColor(bricksColors, brickId, colorPresetName) {\n  const color = bricksColors[`${brickId}-${colorPresetName}`];\n  return color ? color.color.rgb : null;\n}\n\nexport default function Preview({\n  bricks, sector, bricksColors, width, step, colorPresetName, textureType,\n}) {\n  console.log('Preview Type', textureType);\n  const gridSize = 1;\n  const tileArr = new Array(gridSize * gridSize).fill(null);\n  const tiles = tileArr.map((_, i) => (\n    <div key={i} className=\"sectorItem\" style={{ ...buildSyleObj({ width: sector.width, height: sector.height }, step) }}>\n      {bricks.map(({ position, size, id }) => (\n        <Brick\n          key={id}\n          className=\"brick\"\n          color={getColor(bricksColors, id, colorPresetName)}\n          style={buildSyleObj({ ...position, ...size }, step)}\n          textureType={textureType}\n        />\n      ))}\n    </div>\n  ));\n  return (\n    <div\n      style={{ gridTemplateColumns: new Array(gridSize).fill(null).map(() => `${step * width}px`).join(' ') }}\n      className=\"grid-area-preview\"\n    >\n      {tiles}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { makeRgbStyleProp } from '../../../helpers';\n\n\nexport class ColorPalette extends Component {\n  state = {\n    dropdownOpen: false,\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  }\n\n  setColor = color => () => {\n    this.props.setNewColor(color);\n  }\n\n  removeColor = code => (e) => {\n    e.preventDefault();\n    this.props.removeColor(code);\n  }\n\n  render() {\n    const { colorList } = this.props;\n    return (\n      <div className=\"color-palette\">\n        {Object.values(colorList).map(color => (\n          <div\n            className=\"color-palette-item\"\n            key={color.code}\n            style={{ backgroundColor: makeRgbStyleProp(color.rgb) }}\n            onClick={this.setColor(color)}\n            title={color.code}\n            onContextMenu={this.removeColor(color.code)}\n          />\n        ))}\n      </div>);\n  }\n}\n\nexport default ColorPalette;\n","import React, { Component } from 'react';\nimport './ColorList.css';\nimport ColorPallete from './ColorPalette';\nimport { makeRgbStyleProp } from '../../../helpers';\n\nclass ColorList extends Component {\n  state = {\n    colorList: [],\n  }\n\n  changeColor(colorCode) {\n    const color = this.props.colors[colorCode];\n    this.props.changeColor(color);\n    const { colorList } = this.state;\n    if (colorList.some(x => x.code === colorCode)) return;\n    const newColorList = colorList.length > 5\n      ? colorList.slice(1).concat([color]) : [...colorList, color];\n    this.setState({ colorList: newColorList });\n  }\n\n  render() {\n    return (\n      <div className=\"color-list\">\n        <select\n          onChange={e => this.changeColor(e.target.value)}\n          style={{ backgroundColor: makeRgbStyleProp(this.props.color.rgb), fontSize: '12px', margin: '6px 0 4px' }}\n          value={this.props.color.code}\n        >\n          {Object.values(this.props.colors).map(({ code, rgb }) => (\n            <option\n              style={{ backgroundColor: makeRgbStyleProp(rgb) }}\n              key={code}\n              value={code}\n            >\n              {code}\n            </option>))}\n        </select>\n        <ColorPallete\n          color={this.state.currentColor}\n          setNewColor={this.props.changeColor}\n          colorList={this.state.colorList}\n          setColorList={this.setColorList}\n          removeColor={this.removeColor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ColorList;\n","/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './NumberInput.css';\n\nfunction handleInc(props) {\n  if (!props.onChange || !(props.onChange instanceof Function)) return;\n  if (props.value >= props.max) return;\n  props.onChange(props.value + 1);\n}\n\nfunction handleDec(props) {\n  if (!props.onChange || !(props.onChange instanceof Function)) return;\n  if (props.value <= props.min) return;\n  props.onChange(props.value - 1);\n}\n\nfunction NumberInput(props) {\n  return (\n    <div style={props.style} className=\"number-input\">\n      <div className=\"ctl\" onClick={() => handleDec(props)}>-</div>\n      <div className=\"val\">{props.value}</div>\n      <div className=\"ctl\" onClick={() => handleInc(props)}>+</div>\n    </div>\n  );\n}\n\nNumberInput.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n};\n\n\nexport default NumberInput;\n","import uuid from 'uuid/v4';\nimport _ from 'lodash';\n\nconst buildBriksForNewSectorSize = (bricks, sector, teilwidth, teilheight) => {\n  const newBricks = [];\n\n  bricks.forEach((brick) => {\n    for (let x = 0; x < teilwidth; x += 1) {\n      for (let y = 0; y < teilheight; y += 1) {\n        const left = brick.position.left + x * sector.width;\n        const top = brick.position.top + y * sector.height;\n        const newBrick = {\n          id: uuid(),\n          position: { left, top },\n          size: { ...brick.size },\n        };\n        if (!newBricks.some(({ position }) => _.isEqual(position, newBrick.position))) {\n          newBricks.push(newBrick);\n        }\n      }\n    }\n  });\n\n  return newBricks;\n};\n\nexport default buildBriksForNewSectorSize;\n","import React from 'react';\nimport {\n  Popover, PopoverHeader, PopoverBody,\n} from 'reactstrap';\nimport NumberInput from './NumberInput';\n\n\nexport default class HotKeyPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false,\n    };\n  }\n\n  handleSector = (param, value) => {\n    // eslint-disable-next-line no-restricted-globals\n    const newSize = { [param]: Number(value) };\n    if (this.props.confirmChangeSectorSize()) {\n      this.props.setSectorSize(newSize);\n    }\n  }\n\n  toggle() {\n    const { popoverOpen } = this.state;\n    this.setState({\n      popoverOpen: !popoverOpen,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"grid-sector-options-panel\">\n          <span style={{\n            float: 'left', fontSize: 12, marginLeft: 12, position: 'relative', top: 6,\n          }}\n          >\nРазмер текстуры\n          </span>\n          <NumberInput style={{ position: 'relative', top: 4 }} value={this.props.sector.width} min={2} max={11} onChange={v => this.handleSector('width', v)} />\n          <NumberInput style={{ position: 'relative', top: 4 }} value={this.props.sector.height} min={2} max={11} onChange={v => this.handleSector('height', v)} />\n        </div>\n        <div\n          className=\"tool-button\"\n          style={{\n            backgroundColor: 'gray', textAlign: 'center', width: 24, height: 24, borderRadius: 100, position: 'relative', top: 4,\n          }}\n          id=\"Popover1\"\n          onClick={this.toggle}\n          color=\"link\"\n        >\n?\n\n        </div>\n        <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n          <PopoverHeader>Помощь</PopoverHeader>\n          <PopoverBody>\n            <div>\n              Для добавления цвета в палитру выберите его из выпадающего списка.\n              Удаление из палитры правой клавишей мыши.\n              <ul>\n                <li>\n                  <b>зажатый &#34;alt&#34; - изменить цвет кирпича</b>\n                </li>\n                <li>\n                  <b>зажатый &#34;shift&#34; - удалить кирпич</b>\n                </li>\n                <li>\n                  <b>&#34;ctrl+z&#34; - отменить действие</b>\n                </li>\n                <li>\n                  <b>&#34;ctrl+y&#34; - востановить действие</b>\n                </li>\n                <li>\n                  <b>&#34;up, down, left, right&#34; - изменить положение сектора</b>\n                </li>\n                <li>\n                  <b>&#34;+&#34; - увеличить размер сектора</b>\n                </li>\n                <li>\n                  <b>&#34;-&#34; - уменьшить размер сектора</b>\n                </li>\n              </ul>\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { makeRgbStyleProp, builGradientForPalette } from '../../helpers';\n\nimport importIcon from '../../images/import.svg';\nimport exportIcon from '../../images/export.svg';\n\nimport '../../styles/randomPalettePanel.css';\n\nclass PaintingPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.changeColorValue = this.changeColorValue.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  state = {\n    colorList: [],\n    historyColorList: [],\n    palettesVisible: false,\n  }\n\n  addNewColor = () => {\n    const { color } = this.props;\n    const { colorList } = this.state;\n    this.setState({ colorList: [...colorList, { color, value: 1 }] });\n  }\n\n  handleHisoryListClick = randomPalette => () => {\n    this.setState({ colorList: [...randomPalette], palettesVisible: false });\n  }\n\n  handlePreviewListClick = randomPalette => () => {\n    const { historyColorList } = this.state;\n    const newHistory = historyColorList.length === 5\n      ? [...historyColorList.slice(1, 5), randomPalette]\n      : [...historyColorList, randomPalette];\n    this.setState({\n      colorList: [...randomPalette],\n      historyColorList: newHistory,\n    });\n  }\n\n  handlePalettesVisible = () => {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    this.setState({ palettesVisible: !this.state.palettesVisible });\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  changeColorValue(colorIndex, value) {\n    const oldColor = this.state.colorList[colorIndex];\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1, { ...oldColor, value });\n      return { colorList };\n    });\n  }\n\n  changeColor(colorIndex, newColorCode) {\n    const oldColor = this.state.colorList[colorIndex];\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1,\n        { color: this.props.colors[newColorCode], value: oldColor.value });\n      return { colorList };\n    });\n  }\n\n  onClickRandomPalett = (randomPalette) => {\n    const { historyColorList } = this.state;\n    this.setState({ historyColorList: [...historyColorList, randomPalette] });\n  }\n\n  deleteColor(colorIndex) {\n    this.setState((state) => {\n      const colorList = state.colorList.slice(0);\n      colorList.splice(colorIndex, 1);\n      return { colorList };\n    });\n  }\n\n  renderColorList() {\n    const { colorList } = this.state;\n    const totalValue = colorList\n      .map(colorEntry => colorEntry.value)\n      .reduce((a, c) => a + c);\n    const getPercent = v => (v === 0 ? 0 : Math.round(v / totalValue * 100));\n    return (\n      <>\n        {colorList.map((colorEntry, i) => (\n          <div key={i} className=\"color-preview\">\n            <div className=\"delete-random-color\" onClick={() => this.deleteColor(i)} />\n            <select\n              onChange={e => this.changeColor(i, e.target.value)}\n              style={{ backgroundColor: makeRgbStyleProp(colorEntry.color.rgb) }}\n            >\n              {Object.values(this.props.colors).map(c => (\n                <option\n                  value={c.code}\n                  key={c.code}\n                  style={{ backgroundColor: makeRgbStyleProp(c.rgb) }}\n                >\n                  {c.code}\n                </option>\n              ))}\n            </select>\n            <input type=\"number\" value={colorEntry.value} min=\"0\" onChange={e => this.changeColorValue(i, Number(e.target.value))} />\n            <span className=\"percent\">\n              {getPercent(colorEntry.value)}\n              %\n            </span>\n          </div>\n        ))}\n      </>\n    );\n  }\n\n  renderPreviewHistory() {\n    return (\n      <div className=\"preview-history-wrapper\">\n        <div className=\"preview-history\">\n          {this.state.historyColorList.length === 0\n            ? null\n            : this.state.historyColorList.map((randomPalette, i) => (\n              <div\n                onClick={this.handleHisoryListClick(randomPalette)}\n                key={i}\n                className=\"preview-history-item\"\n              >\n                <div style={{\n                  background: builGradientForPalette(randomPalette), backgroundSize: 'contain', width: '100%', height: '100%',\n                }}\n                />\n              </div>\n            ))}\n          <div className=\"button-open-palette-list\">\n            <div onClick={this.handlePalettesVisible} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderRandomPalette() {\n    return (\n      <>\n        <div onClick={() => this.setState({ palettesVisible: false })} className=\"preview-list\">\n          {Object.keys(this.props.randomPalettes).length === 0\n            ? null\n            : Object.keys(this.props.randomPalettes).map((key, i) => {\n              console.log(this.props.randomPalettes[key]);\n              return (\n                <div\n                  className=\"preview-list-item\"\n                  key={i}\n                >\n                  <div\n                    className=\"img\"\n                    style={{ background: builGradientForPalette(this.props.randomPalettes[key]) }}\n                    onClick={this.handlePreviewListClick(this.props.randomPalettes[key])}\n\n                  />\n                  <div\n                    className=\"tool-button trash-button\"\n                    style={{ width: '34px', height: '34px', margin: '1px 0 0 5px' }}\n                    onClick={this.props.removeRandomPalette(key)}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"texture-panel-container\">\n          {this.renderPreviewHistory()}\n          {/* <div className=\"add-texture-button\"\n            onClick={this.props.onSaveRandomPalette(this.state.colorList)}>\n            Cохранить палитру\n          </div> */}\n          {this.state.palettesVisible ? this.renderRandomPalette() : null}\n        </div>\n        <div style={{ textAlign: 'right', userSelect: 'none' }}>\n          <span style={{ float: 'left', fontSize: 12, marginLeft: 12 }}>Случайная покраска</span>\n          <div className=\"tool-button\" style={{ marginLeft: 6, backgroundImage: `url(${importIcon})` }} size=\"sm\">\n            {window.vasya ? <div className=\"custom-file-input\" onClick={this.props.importPaintingPalettes} />\n              : (\n                <input\n                  type=\"file\"\n                  className=\"custom-file-input\"\n                  required\n                  onChange={this.props.importPaintingPalettes}\n                />\n              )}\n          </div>\n          <div className=\"tool-button\" style={{ marginLeft: 6, backgroundImage: `url(${exportIcon})` }} onClick={this.props.exportPaintingPalettes} size=\"sm\" />\n          <div\n            className=\"tool-button random-button\"\n            style={{\n              marginLeft: 6,\n              color: 'transparent',\n              backgroundColor: this.props.defaultPainting ? 'gray' : 'transparent',\n            }}\n            onClick={() => this.props.makeRandomPainting(this.state.colorList)}\n            size=\"sm\"\n          >\ni\n\n          </div>\n          <div className=\"tool-button\" style={{ textAlign: 'center' }} onClick={this.addNewColor} size=\"sm\">+</div>\n        </div>\n        <div style={{\n          height: '87px', overflowY: 'auto', position: 'relative', marginBottom: '5px',\n        }}\n        >\n          {this.state.colorList.length > 0 ? this.renderColorList() : null}\n          <Button\n            style={{ backgroundColor: 'lightgray', color: 'black' }}\n            onClick={this.props.onSaveRandomPalette(this.state.colorList)}\n            size=\"sm\"\n            block\n          >\n            Сохранить палитру\n          </Button>\n        </div>\n        <Button onClick={this.props.onSave} size=\"sm\" block>Сохранить</Button>\n      </>\n\n    );\n  }\n}\n\nexport default PaintingPanel;\n","import React, { Component } from 'react';\nimport ReactCursorPosition from 'react-cursor-position';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { connect } from 'react-redux';\nimport domtoimage from 'dom-to-image';\nimport _ from 'lodash';\nimport { Base64 } from 'js-base64';\n\nimport GridBricksContainer from './GridBricksContainer';\nimport Preview from '../components/Preview';\nimport ColorList from '../components/tools/ColorList/ColorList';\nimport NumberInput from '../components/NumberInput';\n\nimport * as actionCreators from '../actions';\nimport * as operations from '../operations';\nimport colors from '../data/colors.json';\nimport {\n  getBricksInSector, createImage, isOutside, makeBrickColors, getBrickPairs,\n} from '../helpers';\nimport buildBriksForNewSectorSize from '../helpers/bricksBuilder';\nimport HotKeyPanel from '../components/HotKeyPanel';\nimport './Editor.css';\nimport PaintingPanel from '../components/tools/PaintingPanel';\n\nconst keyList = ['left', 'up', 'right', 'down', 'alt', 'shift', 'ctrl+z', 'ctrl+y', '+', '-'];\nconst sectorSizeControlButton = new Set(['left', 'up', 'right', 'down', '+', '-']);\n\nconst containerStyle = {\n  minHeight: 454,\n  display: 'inline-grid',\n  border: '1px solid gray',\n  gridTemplateColumns: 'auto auto',\n  gridTemplateRows: 'auto',\n  gridColumnGap: '10px',\n  gridRowGap: '15px',\n  placeItems: 'flex-start',\n  gridTemplateAreas: '\"editor preview\"',\n};\n\nconst editorLayout = {\n  padding: '6px 0 6px 6px',\n  // display: 'grid',\n  // gridTemplateRows: '300px'\n};\n\nclass _NewEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      operation: { type: operations.ADD_BRICK },\n      // workareaStep: 20,\n      tileStep: 15,\n      color: Object.values(colors)[0],\n      isDisabledHandleKey: false,\n      teilwidth: 1,\n      teilheight: 1,\n      defaultPainting: true,\n      customSectorBricks: [],\n      customSector: this.props.sector,\n      customSectorBrickColors: {},\n      gridSize: {\n        width: Math.ceil(480 / (this.props.sector.width * 15)),\n        height: Math.ceil(539 / (this.props.sector.height * 15)),\n      },\n      showGrid: false,\n    };\n    this.setSectorSize = this.setSectorSize.bind(this);\n    this.setBrickOperation = this.setBrickOperation.bind(this);\n    this.setPaintOperation = this.setPaintOperation.bind(this);\n    this.setRemoveBrickOperation = this.setRemoveBrickOperation.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.makeRandomPainting = this.makeRandomPainting.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(async () => {\n      if (this.state.defaultPainting) {\n        this.setState({\n          preview: await createImage(this.props.sector.width, this.props.sector.height),\n        });\n      } else {\n        const { width, height } = this.state.customSector;\n        this.setState({\n          preview: await createImage(width, height),\n        });\n      }\n    }, 1000);\n  }\n\n\n  setSectorSize = (size) => {\n    this.props.setSectorSize(size);\n  };\n\n  getInsideBricks() {\n    const {\n      bricks,\n      sector,\n    } = this.props;\n    return bricks.filter(({ position, size }) => !isOutside(position, size, sector));\n  }\n\n\n  setOperation(op) {\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    if (op.type === operations.CHANGE_COLOR_BRICK && !this.state.defaultPainting) return;\n    this.setState({ operation: op });\n  }\n\n  confirmChangeSectorSize = () => {\n    if (Object.keys(this.props.bricks).length > 0) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm('При изменении размера текстуры все кирпичи будут удалены. Продолжить?')) {\n        this.props.resetBricks();\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleKeyDown = (key) => {\n    const { sector, setSectorSize } = this.props;\n    if (sectorSizeControlButton.has(key)) {\n      if (!this.confirmChangeSectorSize()) return;\n    }\n\n    const keyMapping = {\n      alt: operations.CHANGE_COLOR_BRICK,\n      shift: operations.REMOVE_BRICK,\n      'ctrl+z': this.undoredo.bind(this, 'undo'),\n      'ctrl+y': this.undoredo.bind(this, 'redo'),\n      left: setSectorSize.bind(this, { left: sector.left - 1 }),\n      up: setSectorSize.bind(this, { top: sector.top - 1 }),\n      right: setSectorSize.bind(this, { left: sector.left + 1 }),\n      down: setSectorSize.bind(this, { top: sector.top + 1 }),\n      '+': setSectorSize.bind(this, { width: sector.width + 1, height: sector.height + 1 }),\n      '-': setSectorSize.bind(this, { width: sector.width - 1, height: sector.height - 1 }),\n    }[key];\n\n    if (_.isFunction(keyMapping)) {\n      keyMapping();\n    } else {\n      this.setState({\n        isDisabledHandleKey: true,\n        operation: { type: keyMapping },\n      });\n    }\n  }\n\n  changeColor = color => this.setState({ color });\n\n\n  setBrickOperation = (width, height) => () => {\n    console.log('set operation ADD_BRICK', width, height);\n    this.props.changeBrickSize({ size: { width, height } });\n    this.setOperation({ type: operations.ADD_BRICK });\n  }\n\n  setPaintOperation = () => this.setOperation({ type: operations.CHANGE_COLOR_BRICK })\n\n  setRemoveBrickOperation = () => this.setOperation({ type: operations.REMOVE_BRICK });\n\n  onSaveRandomPalette = randomPallete => () => {\n    if (randomPallete.length === 0) return;\n    this.props.addRandomPalette(randomPallete);\n  }\n\n  removeRandomPalette = paletteId => (event) => {\n    event.stopPropagation();\n    this.props.removeRandomPalette(paletteId);\n  }\n\n  importPaintingPalettes = (event) => {\n    event.preventDefault();\n    if (window.vasya) {\n      const json = window.vasya.loadPalette();\n      if (json) {\n        const randomPaletts = JSON.parse(json);\n        this.props.setRandomPalettes(randomPaletts);\n      }\n    } else {\n      const { files } = event.target;\n\n      if (files.length === 0) return;\n      const file = files[0];\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        const json = Base64.decode(reader.result);\n        if (json.length !== 0) {\n          const randomPaletts = JSON.parse(json);\n          this.props.setRandomPalettes(randomPaletts);\n        }\n      };\n\n      reader.readAsText(file);\n    }\n  }\n\n  exportPaintingPalettes = () => {\n    if (Object.keys(this.props.randomPalettes).length === 0) return;\n    const json = JSON.stringify(this.props.randomPalettes);\n    if (window.vasya) {\n      window.vasya.savePalette(json);\n    } else {\n      const data = new Blob([Base64.encode(json)], {\n        type: 'application/json',\n      });\n\n      const csvURL = window.URL.createObjectURL(data);\n      const tempLink = document.createElement('a');\n      tempLink.href = csvURL;\n      tempLink.setAttribute('download', 'template.txt');\n      tempLink.click();\n    }\n  }\n\n  switchTextureType = () => {\n    this.props.changeBrickSize({ size: { width: 3, height: 1 } });\n    this.props.switchTextureType();\n  }\n\n  handleKeyUp = () => {\n    this.setState({\n      isDisabledHandleKey: false,\n      operation: { type: operations.ADD_BRICK },\n    });\n  }\n\n  undoredo = (type) => {\n    const {\n      history,\n      addBrick,\n      removeBrick,\n      changeBrickColor,\n    } = this.props;\n\n    const historyLength = history[type].length;\n\n    if (historyLength === 0) {\n      return;\n    }\n\n    const operationMapping = {\n      [operations.ADD_BRICK]: ({ brick, color, colorPresetName }) => {\n        if (type === 'redo') {\n          return addBrick({ brick, color, colorPresetName });\n        }\n        return removeBrick({ brick });\n      },\n      [operations.REMOVE_BRICK]: ({ brick, color, colorPresetName }) => {\n        if (type === 'undo') {\n          return addBrick({ brick, color, colorPresetName });\n        }\n        return removeBrick({ brick });\n      },\n      [operations.CHANGE_COLOR_BRICK]: ({ brickId, color, colorPresetName }) => (\n        changeBrickColor({\n          brickId,\n          color: type === 'redo' ? color.new : color.old,\n          colorPresetName,\n        })\n      ),\n    };\n    const lastOperations = _.last(history[type]);\n    if (_.isArray(lastOperations)) {\n      lastOperations.forEach((operation) => {\n        operationMapping[operation.type](operation.data);\n      });\n    } else {\n      operationMapping[lastOperations.type](lastOperations.data);\n    }\n    this.props.historySwap({ type });\n  }\n\n  makeRandomPainting = (colorList) => {\n    if (!Object.keys(colorList).length) return;\n    if (!this.state.defaultPainting) {\n      this.makePainingForCustomSectorSize(colorList);\n    }\n  }\n\n  makePainingForCustomSectorSize = (colorList) => {\n    const { teilwidth, teilheight, customSector } = this.state;\n    console.log('TCL: makePainingForCustomSectorSize -> teilheight', teilheight);\n    console.log('TCL: makePainingForCustomSectorSize -> teilwidth', teilwidth);\n    const { bricks, sector } = this.props;\n\n    const bricksInSector = getBricksInSector(bricks, sector);\n\n    const newBriks = buildBriksForNewSectorSize(bricksInSector, sector, teilwidth, teilheight);\n\n    const colorPresetName = '1';\n\n\n    const outsideBricks = Object.values(newBriks)\n      .filter(({ position: { left, top }, size }) => (\n        isOutside(\n          { left: left + customSector.left, top: top + customSector.top },\n          size, customSector,\n        )));\n\n    const brickPairs = getBrickPairs(outsideBricks);\n\n    const bricksInPairsIds = _.keyBy(brickPairs, 'id');\n    const brickSets = _.chunk(brickPairs, 2)\n      .concat(Object.values(newBriks).filter(x => !(x.id in bricksInPairsIds)).map(x => [x]));\n    const resultColorsList = makeBrickColors(brickSets, colorList);\n\n    const brickColors = {};\n    Object.keys(resultColorsList).forEach((id) => {\n      const color = resultColorsList[id];\n\n      const presetId = `${id}-${colorPresetName}`;\n      brickColors[presetId] = { colorPresetName, brickId: id, color };\n    });\n\n    this.setState({\n      customSectorBricks: newBriks,\n      customSectorBrickColors: brickColors,\n      operation: { type: operations.ADD_BRICK },\n    });\n    this.props.historyRemove();\n    this.props.resetBrickColors();\n  }\n\n  handleTileSize = (param, v) => {\n    console.log(param, v);\n    if (this.state.defaultPainting) {\n      this.setState({\n        teilwidth: 1, teilheight: 1, customSectorBricks: [], customSector: { ...this.props.sector },\n      });\n      return;\n    }\n    const { customSector, tileStep } = this.state;\n    // 480, 539 ширина и высота окна с тайлом\n    const newTailWidth = param === 'width' ? v : this.state.teilwidth;\n    const newTailHeight = param === 'height' ? v : this.state.teilheight;\n\n    const widthGrixdSize = Math.ceil(480 / (newTailWidth * this.props.sector.width * tileStep));\n    console.log(this.props.sector.width * this.state.tileStep * this.state.teilwidth);\n    const heightGridSize = Math.ceil(539 / (newTailHeight * this.props.sector.height * tileStep));\n    console.log('TCL: handleTileSize -> tileStep', tileStep);\n    this.setState({\n      [`teil${param}`]: v,\n      customSector: { ...customSector, [param]: this.props.sector[param] * v },\n      gridSize: { width: widthGrixdSize, height: heightGridSize },\n      customSectorBricks: [],\n    });\n  }\n\n  async updatePreview() {\n    this.setState({\n      preview: await createImage(this.props.sector.width, this.props.sector.height),\n    });\n  }\n\n  async save() {\n    const img = await domtoimage.toPng(document.querySelector('.sectorItem'), {\n      width: (this.state.defaultPainting\n        ? this.props.sector.width : this.state.customSector.width) * 15,\n      height: (this.state.defaultPainting\n        ? this.props.sector.height : this.state.customSector.height) * 15,\n    });\n    document.querySelector('#preview').src = img;\n    document.body.background = this.state.fillBackground ? img : 'none';\n    if (window.vasya) {\n      window.vasya.save(img);\n    }\n  }\n\n  textureTypePanel() {\n    return (\n      <div className=\"textureTypePanel\">\n        <p className=\"textureTypePanel-item\">Тип текстуры:</p>\n        <p className=\"textureTypePanel-item\">\n          Кирпич\n          <input\n            className=\"input\"\n            type=\"radio\"\n            name=\"textureType\"\n            checked={this.props.textureType === 'brick'}\n            onChange={this.switchTextureType}\n          />\n        </p>\n        <p className=\"textureTypePanel-item\">\n          Плитка\n          <input\n            className=\"input\"\n            type=\"radio\"\n            name=\"textureType\"\n            checked={this.props.textureType === 'tile'}\n            onChange={this.switchTextureType}\n          />\n        </p>\n      </div>\n    );\n  }\n\n  renderGrid() {\n    const rows = [];\n    for (let i = 0; i < this.state.gridSize.height; i += 1) {\n      rows.push(i);\n    }\n    const cols = [];\n    for (let i = 0; i < this.state.gridSize.width; i += 1) {\n      cols.push(i);\n    }\n    return (\n      rows.map((x, i) => (\n        cols.map((y, j) => (\n          <div\n            key={`${i}:${j}`}\n            style={{\n              width: this.props.sector.width * this.state.tileStep * this.state.teilwidth,\n              height: this.props.sector.height * this.state.tileStep * this.state.teilheight,\n              border: '1px solid red',\n              boxSizing: 'border-box',\n              position: 'absolute',\n              left: j * this.props.sector.width * this.state.tileStep * this.state.teilwidth,\n              top: i * this.props.sector.height * this.state.tileStep * this.state.teilheight,\n            }}\n          >\n            {''}\n          </div>\n        ))))\n    );\n  }\n\n  render() {\n    return (\n      <div style={containerStyle}>\n        <KeyboardEventHandler\n          handleKeys={keyList}\n          isDisabled={this.state.isDisabledHandleKey}\n          handleEventType=\"keydown\"\n          onKeyEvent={this.handleKeyDown}\n          handleFocusableElements\n        />\n        <KeyboardEventHandler\n          handleKeys={keyList}\n          handleEventType=\"keyup\"\n          onKeyEvent={this.handleKeyUp}\n          handleFocusableElements\n        />\n        <div style={editorLayout}>\n          <HotKeyPanel\n            setSectorSize={this.setSectorSize}\n            confirmChangeSectorSize={this.confirmChangeSectorSize}\n            sector={this.props.sector}\n          />\n          <ColorList\n            colors={colors}\n            color={this.state.color}\n            changeColor={this.changeColor}\n          />\n          {this.textureTypePanel()}\n          <ReactCursorPosition>\n            <GridBricksContainer\n              color={this.state.color}\n              currentOperation={this.state.operation}\n              step={20}\n              setBrickOperation={this.setBrickOperation}\n              setRemoveBrickOperation={this.setRemoveBrickOperation}\n              setPaintOperation={this.setPaintOperation}\n              disablePaintButton={!this.state.defaultPainting}\n            />\n          </ReactCursorPosition>\n          <PaintingPanel\n            makeRandomPainting={this.makeRandomPainting}\n            onSaveRandomPalette={this.onSaveRandomPalette}\n            removeRandomPalette={this.removeRandomPalette}\n            bricks={this.props.bricks}\n            onSave={this.save}\n            colors={colors}\n            color={this.state.color}\n            randomPalettes={this.props.randomPalettes}\n            importPaintingPalettes={this.importPaintingPalettes}\n            exportPaintingPalettes={this.exportPaintingPalettes}\n            defaultPainting={this.state.defaultPainting}\n          />\n        </div>\n        <div style={{\n          width: 495, height: '100%', padding: '6px 6px 6px', overflow: 'hidden',\n        }}\n        >\n          <div className=\"tile-options-panel\">\n            <div>\n              <NumberInput\n                style={{ position: 'relative' }}\n                value={this.state.teilwidth}\n                min={1}\n                max={6}\n                onChange={v => this.handleTileSize('width', v)}\n              />\n              <NumberInput\n                style={{ position: 'relative' }}\n                value={this.state.teilheight}\n                min={1}\n                max={6}\n                onChange={v => this.handleTileSize('height', v)}\n              />\n            </div>\n            <p style={{ padding: 0, display: 'block', margin: '0' }}>\n              <input\n                style={{ marginRight: '5px' }}\n                type=\"checkbox\"\n                name=\"paintingType\"\n                checked={!this.state.defaultPainting}\n                onChange={() => this.setState({\n                  // eslint-disable-next-line react/no-access-state-in-setstate\n                  defaultPainting: !this.state.defaultPainting,\n                  teilwidth: 1,\n                  customSectorBricks: [],\n                  teilheight: 1,\n                  customSector: { ...this.props.sector },\n                  gridSize: {\n                    width: Math.ceil(480 / (this.props.sector.width * 15)),\n                    height: Math.ceil(539 / (this.props.sector.height * 15)),\n                  },\n                })}\n              />\n            Меланж\n            </p>\n            <p style={{ padding: 0, display: 'block', margin: '0' }}>\n              <input\n                style={{ marginRight: '5px' }}\n                type=\"checkbox\"\n                name=\"paintingType\"\n                checked={this.state.showGrid}\n              // eslint-disable-next-line react/no-access-state-in-setstate\n                onChange={() => this.setState({ showGrid: !this.state.showGrid })}\n              />\n            Показать сетку\n            </p>\n          </div>\n          <div style={{\n            width: '480px', height: '539px', overflow: 'hidden', backgroundColor: '#7f7f7f', position: 'relative', backgroundImage: `url('${this.state.preview}')`,\n          }}\n          >\n            {this.state.showGrid ? this.renderGrid() : null}\n          </div>\n        </div>\n        <div style={{ position: 'absolute', left: -1000 }}>\n          {this.state.defaultPainting\n            ? (\n              <Preview\n                bricks={getBricksInSector(this.props.bricks, this.props.sector)}\n                sector={this.props.sector}\n                bricksColors={this.props.bricksColors}\n                width={this.props.sector.width}\n                step={this.state.tileStep}\n                colorPresetName=\"1\"\n                textureType={this.props.textureType}\n              />\n            )\n            : (\n              <Preview\n                bricks={this.state.customSectorBricks}\n                sector={this.state.customSector}\n                bricksColors={this.state.customSectorBrickColors}\n                width={this.state.customSector.width}\n                step={this.state.tileStep}\n                colorPresetName=\"1\"\n                textureType={this.props.textureType}\n              />\n            )\n          }\n          <img id=\"preview\" alt=\"preview\" src=\"https://via.placeholder.com/1\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const props = {\n    bricks: state.bricks,\n    templateSize: state.templateSize,\n    sector: state.sector,\n    bricksColors: state.bricksColors,\n    // colorPresetName: state.colorPresetName,\n    history: state.history,\n    textureType: state.textureType,\n    randomPalettes: state.randomPaletts,\n    // colorPalette: state.colorPalette,\n  };\n  return props;\n};\n\nconst NewEditor = connect(\n  mapStateToProps,\n  actionCreators,\n)(_NewEditor);\n\nexport default NewEditor;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './styles/App.css';\nimport NewEditor from './containers/NewEditor';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <NewEditor />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { createStore } from 'redux';\nimport uuid from 'uuid/v4';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\nimport App from './App';\n\nfunction makePalette(name = 'new') {\n  return { id: uuid(), name, colors: [] };\n}\n\nconst palette = makePalette('палитра 0');\nconst initialPaletteState = { currentPalette: palette.id, palettes: { [palette.id]: palette } };\n\n(async function init() {\n  let store;\n  if (window.CefSharp) {\n    await window.CefSharp.BindObjectAsync('vasya');\n    const paletteData = window.vasya.loadString('palette');\n    const colorPaletteState = paletteData ? JSON.parse(paletteData) : initialPaletteState;\n    /* eslint-disable no-underscore-dangle */\n    store = createStore(\n      reducers({ colorPaletteState }),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n    /* eslint-enable */\n    let currentPalette;\n    store.subscribe(() => {\n      const prevPalette = currentPalette;\n      currentPalette = store.getState().colorPalette;\n      if (prevPalette === currentPalette) return;\n      window.vasya.saveString('palette', JSON.stringify(currentPalette));\n    });\n  } else {\n    /* eslint-disable no-underscore-dangle */\n    store = createStore(\n      reducers({ colorPaletteState: initialPaletteState }),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n  /* eslint-enable */\n  }\n  ReactDOM.render(<App store={store} />, document.getElementById('root'));\n}());\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}